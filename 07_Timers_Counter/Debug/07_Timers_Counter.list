
07_Timers_Counter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012d0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001400  08001400  00011400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001444  08001444  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001444  08001444  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001444  08001444  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001444  08001444  00011444  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001448  08001448  00011448  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800144c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  080014a8  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  080014a8  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020085  2**0
                  CONTENTS, READONLY
 13 .debug_info   000011b4  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005f4  00000000  00000000  0002127c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000190  00000000  00000000  00021870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000010c  00000000  00000000  00021a00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011f90  00000000  00000000  00021b0c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000024fc  00000000  00000000  00033a9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0005a0cc  00000000  00000000  00035f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c24  00000000  00000000  00090064  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000058  00000000  00000000  00090c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	080013e8 	.word	0x080013e8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	080013e8 	.word	0x080013e8

08000170 <main>:


char key;
int16_t time = 0;

int main(void) {
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0

	//set sysclock to 72MHZ
	HSE_PLL_SYS_CLK_MAX();
 8000174:	f000 f846 	bl	8000204 <HSE_PLL_SYS_CLK_MAX>
	//Enable PC13 LED
	RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;
 8000178:	4b1e      	ldr	r3, [pc, #120]	; (80001f4 <main+0x84>)
 800017a:	699b      	ldr	r3, [r3, #24]
 800017c:	4a1d      	ldr	r2, [pc, #116]	; (80001f4 <main+0x84>)
 800017e:	f043 0310 	orr.w	r3, r3, #16
 8000182:	6193      	str	r3, [r2, #24]
	GPIOC->CRH |= GPIO_CRH_MODE13;
 8000184:	4b1c      	ldr	r3, [pc, #112]	; (80001f8 <main+0x88>)
 8000186:	685b      	ldr	r3, [r3, #4]
 8000188:	4a1b      	ldr	r2, [pc, #108]	; (80001f8 <main+0x88>)
 800018a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800018e:	6053      	str	r3, [r2, #4]

	UART1_Init();
 8000190:	f000 f956 	bl	8000440 <UART1_Init>
	GPIOC->ODR |= GPIO_ODR_ODR13;
 8000194:	4b18      	ldr	r3, [pc, #96]	; (80001f8 <main+0x88>)
 8000196:	68db      	ldr	r3, [r3, #12]
 8000198:	4a17      	ldr	r2, [pc, #92]	; (80001f8 <main+0x88>)
 800019a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800019e:	60d3      	str	r3, [r2, #12]
	TIM2_1Hz_Overflow();
 80001a0:	f000 f91a 	bl	80003d8 <TIM2_1Hz_Overflow>

	while (1) {
		while (!(TIM2->SR & TIM_SR_UIF));
 80001a4:	bf00      	nop
 80001a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80001aa:	691b      	ldr	r3, [r3, #16]
 80001ac:	f003 0301 	and.w	r3, r3, #1
 80001b0:	2b00      	cmp	r3, #0
 80001b2:	d0f8      	beq.n	80001a6 <main+0x36>
			; //wait until counter overflow flag occurs
		TIM2->SR &= ~ TIM_SR_UIF; //reset counter overflow update flag
 80001b4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80001b8:	691b      	ldr	r3, [r3, #16]
 80001ba:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80001be:	f023 0301 	bic.w	r3, r3, #1
 80001c2:	6113      	str	r3, [r2, #16]
		GPIOC->ODR ^= GPIO_ODR_ODR13;
 80001c4:	4b0c      	ldr	r3, [pc, #48]	; (80001f8 <main+0x88>)
 80001c6:	68db      	ldr	r3, [r3, #12]
 80001c8:	4a0b      	ldr	r2, [pc, #44]	; (80001f8 <main+0x88>)
 80001ca:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80001ce:	60d3      	str	r3, [r2, #12]
		time++;
 80001d0:	4b0a      	ldr	r3, [pc, #40]	; (80001fc <main+0x8c>)
 80001d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80001d6:	b29b      	uxth	r3, r3
 80001d8:	3301      	adds	r3, #1
 80001da:	b29b      	uxth	r3, r3
 80001dc:	b21a      	sxth	r2, r3
 80001de:	4b07      	ldr	r3, [pc, #28]	; (80001fc <main+0x8c>)
 80001e0:	801a      	strh	r2, [r3, #0]
		printf("time : %d (s)\r\n", time);
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <main+0x8c>)
 80001e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80001e8:	4619      	mov	r1, r3
 80001ea:	4805      	ldr	r0, [pc, #20]	; (8000200 <main+0x90>)
 80001ec:	f000 fa7e 	bl	80006ec <iprintf>
		while (!(TIM2->SR & TIM_SR_UIF));
 80001f0:	e7d8      	b.n	80001a4 <main+0x34>
 80001f2:	bf00      	nop
 80001f4:	40021000 	.word	0x40021000
 80001f8:	40011000 	.word	0x40011000
 80001fc:	20000078 	.word	0x20000078
 8000200:	08001400 	.word	0x08001400

08000204 <HSE_PLL_SYS_CLK_MAX>:
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSE);

}

void HSE_PLL_SYS_CLK_MAX(void)
{
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	RCC->CR |= RCC_CR_HSEON;
 8000208:	4b21      	ldr	r3, [pc, #132]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a20      	ldr	r2, [pc, #128]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800020e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000212:	6013      	str	r3, [r2, #0]
	while ((RCC->CR & RCC_CR_HSERDY) == 0)
 8000214:	bf00      	nop
 8000216:	4b1e      	ldr	r3, [pc, #120]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800021e:	2b00      	cmp	r3, #0
 8000220:	d0f9      	beq.n	8000216 <HSE_PLL_SYS_CLK_MAX+0x12>
		;

	FLASH->ACR |=FLASH_ACR_LATENCY_2 |FLASH_ACR_PRFTBE;
 8000222:	4b1c      	ldr	r3, [pc, #112]	; (8000294 <HSE_PLL_SYS_CLK_MAX+0x90>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a1b      	ldr	r2, [pc, #108]	; (8000294 <HSE_PLL_SYS_CLK_MAX+0x90>)
 8000228:	f043 0314 	orr.w	r3, r3, #20
 800022c:	6013      	str	r3, [r2, #0]


	RCC->CFGR |= RCC_CFGR_PLLSRC;
 800022e:	4b18      	ldr	r3, [pc, #96]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000230:	685b      	ldr	r3, [r3, #4]
 8000232:	4a17      	ldr	r2, [pc, #92]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000234:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000238:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PLLMULL9;
 800023a:	4b15      	ldr	r3, [pc, #84]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800023c:	685b      	ldr	r3, [r3, #4]
 800023e:	4a14      	ldr	r2, [pc, #80]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000240:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 8000244:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;
 8000246:	4b12      	ldr	r3, [pc, #72]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000248:	685b      	ldr	r3, [r3, #4]
 800024a:	4a11      	ldr	r2, [pc, #68]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800024c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000250:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_ADCPRE_DIV6;
 8000252:	4b0f      	ldr	r3, [pc, #60]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000254:	685b      	ldr	r3, [r3, #4]
 8000256:	4a0e      	ldr	r2, [pc, #56]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000258:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800025c:	6053      	str	r3, [r2, #4]

	RCC->CR |= RCC_CR_PLLON;
 800025e:	4b0c      	ldr	r3, [pc, #48]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a0b      	ldr	r2, [pc, #44]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000264:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000268:	6013      	str	r3, [r2, #0]

	//RCC->CFGR &= ~RCC_CFGR_SW;
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 800026a:	4b09      	ldr	r3, [pc, #36]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800026c:	685b      	ldr	r3, [r3, #4]
 800026e:	4a08      	ldr	r2, [pc, #32]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 8000270:	f043 0302 	orr.w	r3, r3, #2
 8000274:	6053      	str	r3, [r2, #4]

	while ((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000276:	bf00      	nop
 8000278:	4b05      	ldr	r3, [pc, #20]	; (8000290 <HSE_PLL_SYS_CLK_MAX+0x8c>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000280:	2b00      	cmp	r3, #0
 8000282:	d0f9      	beq.n	8000278 <HSE_PLL_SYS_CLK_MAX+0x74>
		;
}
 8000284:	bf00      	nop
 8000286:	bf00      	nop
 8000288:	46bd      	mov	sp, r7
 800028a:	bc80      	pop	{r7}
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop
 8000290:	40021000 	.word	0x40021000
 8000294:	40022000 	.word	0x40022000

08000298 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	b086      	sub	sp, #24
 800029c:	af00      	add	r7, sp, #0
 800029e:	60f8      	str	r0, [r7, #12]
 80002a0:	60b9      	str	r1, [r7, #8]
 80002a2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a4:	2300      	movs	r3, #0
 80002a6:	617b      	str	r3, [r7, #20]
 80002a8:	e00a      	b.n	80002c0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002aa:	f3af 8000 	nop.w
 80002ae:	4601      	mov	r1, r0
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	1c5a      	adds	r2, r3, #1
 80002b4:	60ba      	str	r2, [r7, #8]
 80002b6:	b2ca      	uxtb	r2, r1
 80002b8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ba:	697b      	ldr	r3, [r7, #20]
 80002bc:	3301      	adds	r3, #1
 80002be:	617b      	str	r3, [r7, #20]
 80002c0:	697a      	ldr	r2, [r7, #20]
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	429a      	cmp	r2, r3
 80002c6:	dbf0      	blt.n	80002aa <_read+0x12>
  }

  return len;
 80002c8:	687b      	ldr	r3, [r7, #4]
}
 80002ca:	4618      	mov	r0, r3
 80002cc:	3718      	adds	r7, #24
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}

080002d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002d2:	b580      	push	{r7, lr}
 80002d4:	b086      	sub	sp, #24
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	60f8      	str	r0, [r7, #12]
 80002da:	60b9      	str	r1, [r7, #8]
 80002dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002de:	2300      	movs	r3, #0
 80002e0:	617b      	str	r3, [r7, #20]
 80002e2:	e009      	b.n	80002f8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80002e4:	68bb      	ldr	r3, [r7, #8]
 80002e6:	1c5a      	adds	r2, r3, #1
 80002e8:	60ba      	str	r2, [r7, #8]
 80002ea:	781b      	ldrb	r3, [r3, #0]
 80002ec:	4618      	mov	r0, r3
 80002ee:	f000 f903 	bl	80004f8 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f2:	697b      	ldr	r3, [r7, #20]
 80002f4:	3301      	adds	r3, #1
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	697a      	ldr	r2, [r7, #20]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	429a      	cmp	r2, r3
 80002fe:	dbf1      	blt.n	80002e4 <_write+0x12>
  }
  return len;
 8000300:	687b      	ldr	r3, [r7, #4]
}
 8000302:	4618      	mov	r0, r3
 8000304:	3718      	adds	r7, #24
 8000306:	46bd      	mov	sp, r7
 8000308:	bd80      	pop	{r7, pc}

0800030a <_close>:

int _close(int file)
{
 800030a:	b480      	push	{r7}
 800030c:	b083      	sub	sp, #12
 800030e:	af00      	add	r7, sp, #0
 8000310:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000312:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000316:	4618      	mov	r0, r3
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	bc80      	pop	{r7}
 800031e:	4770      	bx	lr

08000320 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000320:	b480      	push	{r7}
 8000322:	b083      	sub	sp, #12
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
 8000328:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800032a:	683b      	ldr	r3, [r7, #0]
 800032c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000330:	605a      	str	r2, [r3, #4]
  return 0;
 8000332:	2300      	movs	r3, #0
}
 8000334:	4618      	mov	r0, r3
 8000336:	370c      	adds	r7, #12
 8000338:	46bd      	mov	sp, r7
 800033a:	bc80      	pop	{r7}
 800033c:	4770      	bx	lr

0800033e <_isatty>:

int _isatty(int file)
{
 800033e:	b480      	push	{r7}
 8000340:	b083      	sub	sp, #12
 8000342:	af00      	add	r7, sp, #0
 8000344:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000346:	2301      	movs	r3, #1
}
 8000348:	4618      	mov	r0, r3
 800034a:	370c      	adds	r7, #12
 800034c:	46bd      	mov	sp, r7
 800034e:	bc80      	pop	{r7}
 8000350:	4770      	bx	lr

08000352 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000352:	b480      	push	{r7}
 8000354:	b085      	sub	sp, #20
 8000356:	af00      	add	r7, sp, #0
 8000358:	60f8      	str	r0, [r7, #12]
 800035a:	60b9      	str	r1, [r7, #8]
 800035c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800035e:	2300      	movs	r3, #0
}
 8000360:	4618      	mov	r0, r3
 8000362:	3714      	adds	r7, #20
 8000364:	46bd      	mov	sp, r7
 8000366:	bc80      	pop	{r7}
 8000368:	4770      	bx	lr
	...

0800036c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800036c:	b580      	push	{r7, lr}
 800036e:	b086      	sub	sp, #24
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000374:	4a14      	ldr	r2, [pc, #80]	; (80003c8 <_sbrk+0x5c>)
 8000376:	4b15      	ldr	r3, [pc, #84]	; (80003cc <_sbrk+0x60>)
 8000378:	1ad3      	subs	r3, r2, r3
 800037a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800037c:	697b      	ldr	r3, [r7, #20]
 800037e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000380:	4b13      	ldr	r3, [pc, #76]	; (80003d0 <_sbrk+0x64>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	2b00      	cmp	r3, #0
 8000386:	d102      	bne.n	800038e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000388:	4b11      	ldr	r3, [pc, #68]	; (80003d0 <_sbrk+0x64>)
 800038a:	4a12      	ldr	r2, [pc, #72]	; (80003d4 <_sbrk+0x68>)
 800038c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800038e:	4b10      	ldr	r3, [pc, #64]	; (80003d0 <_sbrk+0x64>)
 8000390:	681a      	ldr	r2, [r3, #0]
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4413      	add	r3, r2
 8000396:	693a      	ldr	r2, [r7, #16]
 8000398:	429a      	cmp	r2, r3
 800039a:	d207      	bcs.n	80003ac <_sbrk+0x40>
  {
    errno = ENOMEM;
 800039c:	f000 fa4a 	bl	8000834 <__errno>
 80003a0:	4603      	mov	r3, r0
 80003a2:	220c      	movs	r2, #12
 80003a4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003a6:	f04f 33ff 	mov.w	r3, #4294967295
 80003aa:	e009      	b.n	80003c0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003ac:	4b08      	ldr	r3, [pc, #32]	; (80003d0 <_sbrk+0x64>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003b2:	4b07      	ldr	r3, [pc, #28]	; (80003d0 <_sbrk+0x64>)
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4413      	add	r3, r2
 80003ba:	4a05      	ldr	r2, [pc, #20]	; (80003d0 <_sbrk+0x64>)
 80003bc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003be:	68fb      	ldr	r3, [r7, #12]
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	3718      	adds	r7, #24
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bd80      	pop	{r7, pc}
 80003c8:	20005000 	.word	0x20005000
 80003cc:	00000400 	.word	0x00000400
 80003d0:	2000007c 	.word	0x2000007c
 80003d4:	200001d0 	.word	0x200001d0

080003d8 <TIM2_1Hz_Overflow>:
 *      Author: Janith Sinhapura
 */
#include "stm32f1xx.h"
#include "timer.h"

void TIM2_1Hz_Overflow(void) {
 80003d8:	b480      	push	{r7}
 80003da:	af00      	add	r7, sp, #0

	//apb1 runs in 72MHZ
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 80003dc:	4b17      	ldr	r3, [pc, #92]	; (800043c <TIM2_1Hz_Overflow+0x64>)
 80003de:	69db      	ldr	r3, [r3, #28]
 80003e0:	4a16      	ldr	r2, [pc, #88]	; (800043c <TIM2_1Hz_Overflow+0x64>)
 80003e2:	f043 0301 	orr.w	r3, r3, #1
 80003e6:	61d3      	str	r3, [r2, #28]

	//counter clock frquency set to 72000000/7200 = 10000MHz
	TIM2->PSC = 7200 - 1;
 80003e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003ec:	f641 421f 	movw	r2, #7199	; 0x1c1f
 80003f0:	629a      	str	r2, [r3, #40]	; 0x28

	//so timer2 counter takes 1 second to count to 10000
	TIM2->ARR = 10000;
 80003f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003f6:	f242 7210 	movw	r2, #10000	; 0x2710
 80003fa:	62da      	str	r2, [r3, #44]	; 0x2c

	//set current counter value to zero
	TIM2->CNT = 0;
 80003fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000400:	2200      	movs	r2, #0
 8000402:	625a      	str	r2, [r3, #36]	; 0x24

	//set to upcounting
	TIM2->CR1 &= ~TIM_CR1_DIR;
 8000404:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800040e:	f023 0310 	bic.w	r3, r3, #16
 8000412:	6013      	str	r3, [r2, #0]

	//set UEV update enable
	TIM2->CR1 &= ~TIM_CR1_UDIS;
 8000414:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800041e:	f023 0302 	bic.w	r3, r3, #2
 8000422:	6013      	str	r3, [r2, #0]

	//enable counter
	TIM2->CR1 |= TIM_CR1_CEN;
 8000424:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800042e:	f043 0301 	orr.w	r3, r3, #1
 8000432:	6013      	str	r3, [r2, #0]

}
 8000434:	bf00      	nop
 8000436:	46bd      	mov	sp, r7
 8000438:	bc80      	pop	{r7}
 800043a:	4770      	bx	lr
 800043c:	40021000 	.word	0x40021000

08000440 <UART1_Init>:
 *      Author: Janith Sinhapura
 */
#include "stm32f1xx.h"
#include "stdio.h"

void UART1_Init(void) {
 8000440:	b480      	push	{r7}
 8000442:	af00      	add	r7, sp, #0
	//uart1 is under apb2 bus
	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8000444:	4b1e      	ldr	r3, [pc, #120]	; (80004c0 <UART1_Init+0x80>)
 8000446:	699b      	ldr	r3, [r3, #24]
 8000448:	4a1d      	ldr	r2, [pc, #116]	; (80004c0 <UART1_Init+0x80>)
 800044a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800044e:	6193      	str	r3, [r2, #24]

	//uart1 TX-PA9
	//uart1	RX-PA10
	//Enable gpio pins for uart1 in apb2 bus
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8000450:	4b1b      	ldr	r3, [pc, #108]	; (80004c0 <UART1_Init+0x80>)
 8000452:	699b      	ldr	r3, [r3, #24]
 8000454:	4a1a      	ldr	r2, [pc, #104]	; (80004c0 <UART1_Init+0x80>)
 8000456:	f043 0304 	orr.w	r3, r3, #4
 800045a:	6193      	str	r3, [r2, #24]

	//enable gpio alternate funtions
	GPIOA->CRH |= GPIO_CRH_MODE9 ;
 800045c:	4b19      	ldr	r3, [pc, #100]	; (80004c4 <UART1_Init+0x84>)
 800045e:	685b      	ldr	r3, [r3, #4]
 8000460:	4a18      	ldr	r2, [pc, #96]	; (80004c4 <UART1_Init+0x84>)
 8000462:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8000466:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= GPIO_CRH_CNF9_1 | GPIO_CRH_CNF10_0;
 8000468:	4b16      	ldr	r3, [pc, #88]	; (80004c4 <UART1_Init+0x84>)
 800046a:	685b      	ldr	r3, [r3, #4]
 800046c:	4a15      	ldr	r2, [pc, #84]	; (80004c4 <UART1_Init+0x84>)
 800046e:	f443 6390 	orr.w	r3, r3, #1152	; 0x480
 8000472:	6053      	str	r3, [r2, #4]

	//enable uart1
	USART1->CR1 |= USART_CR1_UE;
 8000474:	4b14      	ldr	r3, [pc, #80]	; (80004c8 <UART1_Init+0x88>)
 8000476:	68db      	ldr	r3, [r3, #12]
 8000478:	4a13      	ldr	r2, [pc, #76]	; (80004c8 <UART1_Init+0x88>)
 800047a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800047e:	60d3      	str	r3, [r2, #12]

	//8 data bits
	USART1->CR1 &= ~USART_CR1_M;
 8000480:	4b11      	ldr	r3, [pc, #68]	; (80004c8 <UART1_Init+0x88>)
 8000482:	68db      	ldr	r3, [r3, #12]
 8000484:	4a10      	ldr	r2, [pc, #64]	; (80004c8 <UART1_Init+0x88>)
 8000486:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800048a:	60d3      	str	r3, [r2, #12]

	//1 stop bits
	USART1->CR2 &=~USART_CR2_STOP;
 800048c:	4b0e      	ldr	r3, [pc, #56]	; (80004c8 <UART1_Init+0x88>)
 800048e:	691b      	ldr	r3, [r3, #16]
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <UART1_Init+0x88>)
 8000492:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000496:	6113      	str	r3, [r2, #16]

	//set baud rate to 115200
	//mantissa is 39 = 0x27
	//fractional part is 0.0625 ~ 0.06 = 0x06
	USART1->BRR = (0x27U << 4) | (0x6<< 0);
 8000498:	4b0b      	ldr	r3, [pc, #44]	; (80004c8 <UART1_Init+0x88>)
 800049a:	f240 2276 	movw	r2, #630	; 0x276
 800049e:	609a      	str	r2, [r3, #8]

	//enable tx
	USART1->CR1 |= USART_CR1_TE;
 80004a0:	4b09      	ldr	r3, [pc, #36]	; (80004c8 <UART1_Init+0x88>)
 80004a2:	68db      	ldr	r3, [r3, #12]
 80004a4:	4a08      	ldr	r2, [pc, #32]	; (80004c8 <UART1_Init+0x88>)
 80004a6:	f043 0308 	orr.w	r3, r3, #8
 80004aa:	60d3      	str	r3, [r2, #12]

	//enable rx
	USART1->CR1 |= USART_CR1_RE;
 80004ac:	4b06      	ldr	r3, [pc, #24]	; (80004c8 <UART1_Init+0x88>)
 80004ae:	68db      	ldr	r3, [r3, #12]
 80004b0:	4a05      	ldr	r2, [pc, #20]	; (80004c8 <UART1_Init+0x88>)
 80004b2:	f043 0304 	orr.w	r3, r3, #4
 80004b6:	60d3      	str	r3, [r2, #12]


}
 80004b8:	bf00      	nop
 80004ba:	46bd      	mov	sp, r7
 80004bc:	bc80      	pop	{r7}
 80004be:	4770      	bx	lr
 80004c0:	40021000 	.word	0x40021000
 80004c4:	40010800 	.word	0x40010800
 80004c8:	40013800 	.word	0x40013800

080004cc <UART1_Write_Char>:

void UART1_Write_Char(char data)
{
 80004cc:	b480      	push	{r7}
 80004ce:	b083      	sub	sp, #12
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	4603      	mov	r3, r0
 80004d4:	71fb      	strb	r3, [r7, #7]
	//check data is transmitted out from the data register
	while((USART1->SR & USART_SR_TXE)==0);
 80004d6:	bf00      	nop
 80004d8:	4b06      	ldr	r3, [pc, #24]	; (80004f4 <UART1_Write_Char+0x28>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d0f9      	beq.n	80004d8 <UART1_Write_Char+0xc>
	USART1->DR = data;
 80004e4:	4a03      	ldr	r2, [pc, #12]	; (80004f4 <UART1_Write_Char+0x28>)
 80004e6:	79fb      	ldrb	r3, [r7, #7]
 80004e8:	6053      	str	r3, [r2, #4]


}
 80004ea:	bf00      	nop
 80004ec:	370c      	adds	r7, #12
 80004ee:	46bd      	mov	sp, r7
 80004f0:	bc80      	pop	{r7}
 80004f2:	4770      	bx	lr
 80004f4:	40013800 	.word	0x40013800

080004f8 <__io_putchar>:
char UART1_Read_Char(void){
	while(!(USART1->SR & USART_SR_RXNE));
	return USART1->DR;
}

char __io_putchar(char ch){
 80004f8:	b580      	push	{r7, lr}
 80004fa:	b082      	sub	sp, #8
 80004fc:	af00      	add	r7, sp, #0
 80004fe:	4603      	mov	r3, r0
 8000500:	71fb      	strb	r3, [r7, #7]
	UART1_Write_Char(ch);
 8000502:	79fb      	ldrb	r3, [r7, #7]
 8000504:	4618      	mov	r0, r3
 8000506:	f7ff ffe1 	bl	80004cc <UART1_Write_Char>
	return ch;
 800050a:	79fb      	ldrb	r3, [r7, #7]
}
 800050c:	4618      	mov	r0, r3
 800050e:	3708      	adds	r7, #8
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	; (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	; (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	; (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	; (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	; (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	; (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 f97d 	bl	8000840 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff fe13 	bl	8000170 <main>

0800054a <LoopForever>:

LoopForever:
  b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000558:	0800144c 	.word	0x0800144c
  ldr r2, =_sbss
 800055c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000560:	200001cc 	.word	0x200001cc

08000564 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC1_2_IRQHandler>
	...

08000568 <std>:
 8000568:	2300      	movs	r3, #0
 800056a:	b510      	push	{r4, lr}
 800056c:	4604      	mov	r4, r0
 800056e:	e9c0 3300 	strd	r3, r3, [r0]
 8000572:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000576:	6083      	str	r3, [r0, #8]
 8000578:	8181      	strh	r1, [r0, #12]
 800057a:	6643      	str	r3, [r0, #100]	; 0x64
 800057c:	81c2      	strh	r2, [r0, #14]
 800057e:	6183      	str	r3, [r0, #24]
 8000580:	4619      	mov	r1, r3
 8000582:	2208      	movs	r2, #8
 8000584:	305c      	adds	r0, #92	; 0x5c
 8000586:	f000 f906 	bl	8000796 <memset>
 800058a:	4b0d      	ldr	r3, [pc, #52]	; (80005c0 <std+0x58>)
 800058c:	6224      	str	r4, [r4, #32]
 800058e:	6263      	str	r3, [r4, #36]	; 0x24
 8000590:	4b0c      	ldr	r3, [pc, #48]	; (80005c4 <std+0x5c>)
 8000592:	62a3      	str	r3, [r4, #40]	; 0x28
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <std+0x60>)
 8000596:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000598:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <std+0x64>)
 800059a:	6323      	str	r3, [r4, #48]	; 0x30
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <std+0x68>)
 800059e:	429c      	cmp	r4, r3
 80005a0:	d006      	beq.n	80005b0 <std+0x48>
 80005a2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005a6:	4294      	cmp	r4, r2
 80005a8:	d002      	beq.n	80005b0 <std+0x48>
 80005aa:	33d0      	adds	r3, #208	; 0xd0
 80005ac:	429c      	cmp	r4, r3
 80005ae:	d105      	bne.n	80005bc <std+0x54>
 80005b0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b8:	f000 b966 	b.w	8000888 <__retarget_lock_init_recursive>
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	08000711 	.word	0x08000711
 80005c4:	08000733 	.word	0x08000733
 80005c8:	0800076b 	.word	0x0800076b
 80005cc:	0800078f 	.word	0x0800078f
 80005d0:	20000080 	.word	0x20000080

080005d4 <stdio_exit_handler>:
 80005d4:	4a02      	ldr	r2, [pc, #8]	; (80005e0 <stdio_exit_handler+0xc>)
 80005d6:	4903      	ldr	r1, [pc, #12]	; (80005e4 <stdio_exit_handler+0x10>)
 80005d8:	4803      	ldr	r0, [pc, #12]	; (80005e8 <stdio_exit_handler+0x14>)
 80005da:	f000 b869 	b.w	80006b0 <_fwalk_sglue>
 80005de:	bf00      	nop
 80005e0:	20000000 	.word	0x20000000
 80005e4:	08001129 	.word	0x08001129
 80005e8:	2000000c 	.word	0x2000000c

080005ec <cleanup_stdio>:
 80005ec:	6841      	ldr	r1, [r0, #4]
 80005ee:	4b0c      	ldr	r3, [pc, #48]	; (8000620 <cleanup_stdio+0x34>)
 80005f0:	b510      	push	{r4, lr}
 80005f2:	4299      	cmp	r1, r3
 80005f4:	4604      	mov	r4, r0
 80005f6:	d001      	beq.n	80005fc <cleanup_stdio+0x10>
 80005f8:	f000 fd96 	bl	8001128 <_fflush_r>
 80005fc:	68a1      	ldr	r1, [r4, #8]
 80005fe:	4b09      	ldr	r3, [pc, #36]	; (8000624 <cleanup_stdio+0x38>)
 8000600:	4299      	cmp	r1, r3
 8000602:	d002      	beq.n	800060a <cleanup_stdio+0x1e>
 8000604:	4620      	mov	r0, r4
 8000606:	f000 fd8f 	bl	8001128 <_fflush_r>
 800060a:	68e1      	ldr	r1, [r4, #12]
 800060c:	4b06      	ldr	r3, [pc, #24]	; (8000628 <cleanup_stdio+0x3c>)
 800060e:	4299      	cmp	r1, r3
 8000610:	d004      	beq.n	800061c <cleanup_stdio+0x30>
 8000612:	4620      	mov	r0, r4
 8000614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000618:	f000 bd86 	b.w	8001128 <_fflush_r>
 800061c:	bd10      	pop	{r4, pc}
 800061e:	bf00      	nop
 8000620:	20000080 	.word	0x20000080
 8000624:	200000e8 	.word	0x200000e8
 8000628:	20000150 	.word	0x20000150

0800062c <global_stdio_init.part.0>:
 800062c:	b510      	push	{r4, lr}
 800062e:	4b0b      	ldr	r3, [pc, #44]	; (800065c <global_stdio_init.part.0+0x30>)
 8000630:	4c0b      	ldr	r4, [pc, #44]	; (8000660 <global_stdio_init.part.0+0x34>)
 8000632:	4a0c      	ldr	r2, [pc, #48]	; (8000664 <global_stdio_init.part.0+0x38>)
 8000634:	4620      	mov	r0, r4
 8000636:	601a      	str	r2, [r3, #0]
 8000638:	2104      	movs	r1, #4
 800063a:	2200      	movs	r2, #0
 800063c:	f7ff ff94 	bl	8000568 <std>
 8000640:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000644:	2201      	movs	r2, #1
 8000646:	2109      	movs	r1, #9
 8000648:	f7ff ff8e 	bl	8000568 <std>
 800064c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000650:	2202      	movs	r2, #2
 8000652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000656:	2112      	movs	r1, #18
 8000658:	f7ff bf86 	b.w	8000568 <std>
 800065c:	200001b8 	.word	0x200001b8
 8000660:	20000080 	.word	0x20000080
 8000664:	080005d5 	.word	0x080005d5

08000668 <__sfp_lock_acquire>:
 8000668:	4801      	ldr	r0, [pc, #4]	; (8000670 <__sfp_lock_acquire+0x8>)
 800066a:	f000 b90e 	b.w	800088a <__retarget_lock_acquire_recursive>
 800066e:	bf00      	nop
 8000670:	200001c1 	.word	0x200001c1

08000674 <__sfp_lock_release>:
 8000674:	4801      	ldr	r0, [pc, #4]	; (800067c <__sfp_lock_release+0x8>)
 8000676:	f000 b909 	b.w	800088c <__retarget_lock_release_recursive>
 800067a:	bf00      	nop
 800067c:	200001c1 	.word	0x200001c1

08000680 <__sinit>:
 8000680:	b510      	push	{r4, lr}
 8000682:	4604      	mov	r4, r0
 8000684:	f7ff fff0 	bl	8000668 <__sfp_lock_acquire>
 8000688:	6a23      	ldr	r3, [r4, #32]
 800068a:	b11b      	cbz	r3, 8000694 <__sinit+0x14>
 800068c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000690:	f7ff bff0 	b.w	8000674 <__sfp_lock_release>
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <__sinit+0x28>)
 8000696:	6223      	str	r3, [r4, #32]
 8000698:	4b04      	ldr	r3, [pc, #16]	; (80006ac <__sinit+0x2c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	2b00      	cmp	r3, #0
 800069e:	d1f5      	bne.n	800068c <__sinit+0xc>
 80006a0:	f7ff ffc4 	bl	800062c <global_stdio_init.part.0>
 80006a4:	e7f2      	b.n	800068c <__sinit+0xc>
 80006a6:	bf00      	nop
 80006a8:	080005ed 	.word	0x080005ed
 80006ac:	200001b8 	.word	0x200001b8

080006b0 <_fwalk_sglue>:
 80006b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b4:	4607      	mov	r7, r0
 80006b6:	4688      	mov	r8, r1
 80006b8:	4614      	mov	r4, r2
 80006ba:	2600      	movs	r6, #0
 80006bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006c0:	f1b9 0901 	subs.w	r9, r9, #1
 80006c4:	d505      	bpl.n	80006d2 <_fwalk_sglue+0x22>
 80006c6:	6824      	ldr	r4, [r4, #0]
 80006c8:	2c00      	cmp	r4, #0
 80006ca:	d1f7      	bne.n	80006bc <_fwalk_sglue+0xc>
 80006cc:	4630      	mov	r0, r6
 80006ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006d2:	89ab      	ldrh	r3, [r5, #12]
 80006d4:	2b01      	cmp	r3, #1
 80006d6:	d907      	bls.n	80006e8 <_fwalk_sglue+0x38>
 80006d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006dc:	3301      	adds	r3, #1
 80006de:	d003      	beq.n	80006e8 <_fwalk_sglue+0x38>
 80006e0:	4629      	mov	r1, r5
 80006e2:	4638      	mov	r0, r7
 80006e4:	47c0      	blx	r8
 80006e6:	4306      	orrs	r6, r0
 80006e8:	3568      	adds	r5, #104	; 0x68
 80006ea:	e7e9      	b.n	80006c0 <_fwalk_sglue+0x10>

080006ec <iprintf>:
 80006ec:	b40f      	push	{r0, r1, r2, r3}
 80006ee:	b507      	push	{r0, r1, r2, lr}
 80006f0:	4906      	ldr	r1, [pc, #24]	; (800070c <iprintf+0x20>)
 80006f2:	ab04      	add	r3, sp, #16
 80006f4:	6808      	ldr	r0, [r1, #0]
 80006f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80006fa:	6881      	ldr	r1, [r0, #8]
 80006fc:	9301      	str	r3, [sp, #4]
 80006fe:	f000 f9e3 	bl	8000ac8 <_vfiprintf_r>
 8000702:	b003      	add	sp, #12
 8000704:	f85d eb04 	ldr.w	lr, [sp], #4
 8000708:	b004      	add	sp, #16
 800070a:	4770      	bx	lr
 800070c:	20000058 	.word	0x20000058

08000710 <__sread>:
 8000710:	b510      	push	{r4, lr}
 8000712:	460c      	mov	r4, r1
 8000714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000718:	f000 f868 	bl	80007ec <_read_r>
 800071c:	2800      	cmp	r0, #0
 800071e:	bfab      	itete	ge
 8000720:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000722:	89a3      	ldrhlt	r3, [r4, #12]
 8000724:	181b      	addge	r3, r3, r0
 8000726:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800072a:	bfac      	ite	ge
 800072c:	6563      	strge	r3, [r4, #84]	; 0x54
 800072e:	81a3      	strhlt	r3, [r4, #12]
 8000730:	bd10      	pop	{r4, pc}

08000732 <__swrite>:
 8000732:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000736:	461f      	mov	r7, r3
 8000738:	898b      	ldrh	r3, [r1, #12]
 800073a:	4605      	mov	r5, r0
 800073c:	05db      	lsls	r3, r3, #23
 800073e:	460c      	mov	r4, r1
 8000740:	4616      	mov	r6, r2
 8000742:	d505      	bpl.n	8000750 <__swrite+0x1e>
 8000744:	2302      	movs	r3, #2
 8000746:	2200      	movs	r2, #0
 8000748:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800074c:	f000 f83c 	bl	80007c8 <_lseek_r>
 8000750:	89a3      	ldrh	r3, [r4, #12]
 8000752:	4632      	mov	r2, r6
 8000754:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000758:	81a3      	strh	r3, [r4, #12]
 800075a:	4628      	mov	r0, r5
 800075c:	463b      	mov	r3, r7
 800075e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000762:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000766:	f000 b853 	b.w	8000810 <_write_r>

0800076a <__sseek>:
 800076a:	b510      	push	{r4, lr}
 800076c:	460c      	mov	r4, r1
 800076e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000772:	f000 f829 	bl	80007c8 <_lseek_r>
 8000776:	1c43      	adds	r3, r0, #1
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	bf15      	itete	ne
 800077c:	6560      	strne	r0, [r4, #84]	; 0x54
 800077e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000782:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000786:	81a3      	strheq	r3, [r4, #12]
 8000788:	bf18      	it	ne
 800078a:	81a3      	strhne	r3, [r4, #12]
 800078c:	bd10      	pop	{r4, pc}

0800078e <__sclose>:
 800078e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000792:	f000 b809 	b.w	80007a8 <_close_r>

08000796 <memset>:
 8000796:	4603      	mov	r3, r0
 8000798:	4402      	add	r2, r0
 800079a:	4293      	cmp	r3, r2
 800079c:	d100      	bne.n	80007a0 <memset+0xa>
 800079e:	4770      	bx	lr
 80007a0:	f803 1b01 	strb.w	r1, [r3], #1
 80007a4:	e7f9      	b.n	800079a <memset+0x4>
	...

080007a8 <_close_r>:
 80007a8:	b538      	push	{r3, r4, r5, lr}
 80007aa:	2300      	movs	r3, #0
 80007ac:	4d05      	ldr	r5, [pc, #20]	; (80007c4 <_close_r+0x1c>)
 80007ae:	4604      	mov	r4, r0
 80007b0:	4608      	mov	r0, r1
 80007b2:	602b      	str	r3, [r5, #0]
 80007b4:	f7ff fda9 	bl	800030a <_close>
 80007b8:	1c43      	adds	r3, r0, #1
 80007ba:	d102      	bne.n	80007c2 <_close_r+0x1a>
 80007bc:	682b      	ldr	r3, [r5, #0]
 80007be:	b103      	cbz	r3, 80007c2 <_close_r+0x1a>
 80007c0:	6023      	str	r3, [r4, #0]
 80007c2:	bd38      	pop	{r3, r4, r5, pc}
 80007c4:	200001bc 	.word	0x200001bc

080007c8 <_lseek_r>:
 80007c8:	b538      	push	{r3, r4, r5, lr}
 80007ca:	4604      	mov	r4, r0
 80007cc:	4608      	mov	r0, r1
 80007ce:	4611      	mov	r1, r2
 80007d0:	2200      	movs	r2, #0
 80007d2:	4d05      	ldr	r5, [pc, #20]	; (80007e8 <_lseek_r+0x20>)
 80007d4:	602a      	str	r2, [r5, #0]
 80007d6:	461a      	mov	r2, r3
 80007d8:	f7ff fdbb 	bl	8000352 <_lseek>
 80007dc:	1c43      	adds	r3, r0, #1
 80007de:	d102      	bne.n	80007e6 <_lseek_r+0x1e>
 80007e0:	682b      	ldr	r3, [r5, #0]
 80007e2:	b103      	cbz	r3, 80007e6 <_lseek_r+0x1e>
 80007e4:	6023      	str	r3, [r4, #0]
 80007e6:	bd38      	pop	{r3, r4, r5, pc}
 80007e8:	200001bc 	.word	0x200001bc

080007ec <_read_r>:
 80007ec:	b538      	push	{r3, r4, r5, lr}
 80007ee:	4604      	mov	r4, r0
 80007f0:	4608      	mov	r0, r1
 80007f2:	4611      	mov	r1, r2
 80007f4:	2200      	movs	r2, #0
 80007f6:	4d05      	ldr	r5, [pc, #20]	; (800080c <_read_r+0x20>)
 80007f8:	602a      	str	r2, [r5, #0]
 80007fa:	461a      	mov	r2, r3
 80007fc:	f7ff fd4c 	bl	8000298 <_read>
 8000800:	1c43      	adds	r3, r0, #1
 8000802:	d102      	bne.n	800080a <_read_r+0x1e>
 8000804:	682b      	ldr	r3, [r5, #0]
 8000806:	b103      	cbz	r3, 800080a <_read_r+0x1e>
 8000808:	6023      	str	r3, [r4, #0]
 800080a:	bd38      	pop	{r3, r4, r5, pc}
 800080c:	200001bc 	.word	0x200001bc

08000810 <_write_r>:
 8000810:	b538      	push	{r3, r4, r5, lr}
 8000812:	4604      	mov	r4, r0
 8000814:	4608      	mov	r0, r1
 8000816:	4611      	mov	r1, r2
 8000818:	2200      	movs	r2, #0
 800081a:	4d05      	ldr	r5, [pc, #20]	; (8000830 <_write_r+0x20>)
 800081c:	602a      	str	r2, [r5, #0]
 800081e:	461a      	mov	r2, r3
 8000820:	f7ff fd57 	bl	80002d2 <_write>
 8000824:	1c43      	adds	r3, r0, #1
 8000826:	d102      	bne.n	800082e <_write_r+0x1e>
 8000828:	682b      	ldr	r3, [r5, #0]
 800082a:	b103      	cbz	r3, 800082e <_write_r+0x1e>
 800082c:	6023      	str	r3, [r4, #0]
 800082e:	bd38      	pop	{r3, r4, r5, pc}
 8000830:	200001bc 	.word	0x200001bc

08000834 <__errno>:
 8000834:	4b01      	ldr	r3, [pc, #4]	; (800083c <__errno+0x8>)
 8000836:	6818      	ldr	r0, [r3, #0]
 8000838:	4770      	bx	lr
 800083a:	bf00      	nop
 800083c:	20000058 	.word	0x20000058

08000840 <__libc_init_array>:
 8000840:	b570      	push	{r4, r5, r6, lr}
 8000842:	2600      	movs	r6, #0
 8000844:	4d0c      	ldr	r5, [pc, #48]	; (8000878 <__libc_init_array+0x38>)
 8000846:	4c0d      	ldr	r4, [pc, #52]	; (800087c <__libc_init_array+0x3c>)
 8000848:	1b64      	subs	r4, r4, r5
 800084a:	10a4      	asrs	r4, r4, #2
 800084c:	42a6      	cmp	r6, r4
 800084e:	d109      	bne.n	8000864 <__libc_init_array+0x24>
 8000850:	f000 fdca 	bl	80013e8 <_init>
 8000854:	2600      	movs	r6, #0
 8000856:	4d0a      	ldr	r5, [pc, #40]	; (8000880 <__libc_init_array+0x40>)
 8000858:	4c0a      	ldr	r4, [pc, #40]	; (8000884 <__libc_init_array+0x44>)
 800085a:	1b64      	subs	r4, r4, r5
 800085c:	10a4      	asrs	r4, r4, #2
 800085e:	42a6      	cmp	r6, r4
 8000860:	d105      	bne.n	800086e <__libc_init_array+0x2e>
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	f855 3b04 	ldr.w	r3, [r5], #4
 8000868:	4798      	blx	r3
 800086a:	3601      	adds	r6, #1
 800086c:	e7ee      	b.n	800084c <__libc_init_array+0xc>
 800086e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000872:	4798      	blx	r3
 8000874:	3601      	adds	r6, #1
 8000876:	e7f2      	b.n	800085e <__libc_init_array+0x1e>
 8000878:	08001444 	.word	0x08001444
 800087c:	08001444 	.word	0x08001444
 8000880:	08001444 	.word	0x08001444
 8000884:	08001448 	.word	0x08001448

08000888 <__retarget_lock_init_recursive>:
 8000888:	4770      	bx	lr

0800088a <__retarget_lock_acquire_recursive>:
 800088a:	4770      	bx	lr

0800088c <__retarget_lock_release_recursive>:
 800088c:	4770      	bx	lr
	...

08000890 <_free_r>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	4605      	mov	r5, r0
 8000894:	2900      	cmp	r1, #0
 8000896:	d040      	beq.n	800091a <_free_r+0x8a>
 8000898:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800089c:	1f0c      	subs	r4, r1, #4
 800089e:	2b00      	cmp	r3, #0
 80008a0:	bfb8      	it	lt
 80008a2:	18e4      	addlt	r4, r4, r3
 80008a4:	f000 f8dc 	bl	8000a60 <__malloc_lock>
 80008a8:	4a1c      	ldr	r2, [pc, #112]	; (800091c <_free_r+0x8c>)
 80008aa:	6813      	ldr	r3, [r2, #0]
 80008ac:	b933      	cbnz	r3, 80008bc <_free_r+0x2c>
 80008ae:	6063      	str	r3, [r4, #4]
 80008b0:	6014      	str	r4, [r2, #0]
 80008b2:	4628      	mov	r0, r5
 80008b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008b8:	f000 b8d8 	b.w	8000a6c <__malloc_unlock>
 80008bc:	42a3      	cmp	r3, r4
 80008be:	d908      	bls.n	80008d2 <_free_r+0x42>
 80008c0:	6820      	ldr	r0, [r4, #0]
 80008c2:	1821      	adds	r1, r4, r0
 80008c4:	428b      	cmp	r3, r1
 80008c6:	bf01      	itttt	eq
 80008c8:	6819      	ldreq	r1, [r3, #0]
 80008ca:	685b      	ldreq	r3, [r3, #4]
 80008cc:	1809      	addeq	r1, r1, r0
 80008ce:	6021      	streq	r1, [r4, #0]
 80008d0:	e7ed      	b.n	80008ae <_free_r+0x1e>
 80008d2:	461a      	mov	r2, r3
 80008d4:	685b      	ldr	r3, [r3, #4]
 80008d6:	b10b      	cbz	r3, 80008dc <_free_r+0x4c>
 80008d8:	42a3      	cmp	r3, r4
 80008da:	d9fa      	bls.n	80008d2 <_free_r+0x42>
 80008dc:	6811      	ldr	r1, [r2, #0]
 80008de:	1850      	adds	r0, r2, r1
 80008e0:	42a0      	cmp	r0, r4
 80008e2:	d10b      	bne.n	80008fc <_free_r+0x6c>
 80008e4:	6820      	ldr	r0, [r4, #0]
 80008e6:	4401      	add	r1, r0
 80008e8:	1850      	adds	r0, r2, r1
 80008ea:	4283      	cmp	r3, r0
 80008ec:	6011      	str	r1, [r2, #0]
 80008ee:	d1e0      	bne.n	80008b2 <_free_r+0x22>
 80008f0:	6818      	ldr	r0, [r3, #0]
 80008f2:	685b      	ldr	r3, [r3, #4]
 80008f4:	4408      	add	r0, r1
 80008f6:	6010      	str	r0, [r2, #0]
 80008f8:	6053      	str	r3, [r2, #4]
 80008fa:	e7da      	b.n	80008b2 <_free_r+0x22>
 80008fc:	d902      	bls.n	8000904 <_free_r+0x74>
 80008fe:	230c      	movs	r3, #12
 8000900:	602b      	str	r3, [r5, #0]
 8000902:	e7d6      	b.n	80008b2 <_free_r+0x22>
 8000904:	6820      	ldr	r0, [r4, #0]
 8000906:	1821      	adds	r1, r4, r0
 8000908:	428b      	cmp	r3, r1
 800090a:	bf01      	itttt	eq
 800090c:	6819      	ldreq	r1, [r3, #0]
 800090e:	685b      	ldreq	r3, [r3, #4]
 8000910:	1809      	addeq	r1, r1, r0
 8000912:	6021      	streq	r1, [r4, #0]
 8000914:	6063      	str	r3, [r4, #4]
 8000916:	6054      	str	r4, [r2, #4]
 8000918:	e7cb      	b.n	80008b2 <_free_r+0x22>
 800091a:	bd38      	pop	{r3, r4, r5, pc}
 800091c:	200001c4 	.word	0x200001c4

08000920 <sbrk_aligned>:
 8000920:	b570      	push	{r4, r5, r6, lr}
 8000922:	4e0e      	ldr	r6, [pc, #56]	; (800095c <sbrk_aligned+0x3c>)
 8000924:	460c      	mov	r4, r1
 8000926:	6831      	ldr	r1, [r6, #0]
 8000928:	4605      	mov	r5, r0
 800092a:	b911      	cbnz	r1, 8000932 <sbrk_aligned+0x12>
 800092c:	f000 fcba 	bl	80012a4 <_sbrk_r>
 8000930:	6030      	str	r0, [r6, #0]
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
 8000936:	f000 fcb5 	bl	80012a4 <_sbrk_r>
 800093a:	1c43      	adds	r3, r0, #1
 800093c:	d00a      	beq.n	8000954 <sbrk_aligned+0x34>
 800093e:	1cc4      	adds	r4, r0, #3
 8000940:	f024 0403 	bic.w	r4, r4, #3
 8000944:	42a0      	cmp	r0, r4
 8000946:	d007      	beq.n	8000958 <sbrk_aligned+0x38>
 8000948:	1a21      	subs	r1, r4, r0
 800094a:	4628      	mov	r0, r5
 800094c:	f000 fcaa 	bl	80012a4 <_sbrk_r>
 8000950:	3001      	adds	r0, #1
 8000952:	d101      	bne.n	8000958 <sbrk_aligned+0x38>
 8000954:	f04f 34ff 	mov.w	r4, #4294967295
 8000958:	4620      	mov	r0, r4
 800095a:	bd70      	pop	{r4, r5, r6, pc}
 800095c:	200001c8 	.word	0x200001c8

08000960 <_malloc_r>:
 8000960:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000964:	1ccd      	adds	r5, r1, #3
 8000966:	f025 0503 	bic.w	r5, r5, #3
 800096a:	3508      	adds	r5, #8
 800096c:	2d0c      	cmp	r5, #12
 800096e:	bf38      	it	cc
 8000970:	250c      	movcc	r5, #12
 8000972:	2d00      	cmp	r5, #0
 8000974:	4607      	mov	r7, r0
 8000976:	db01      	blt.n	800097c <_malloc_r+0x1c>
 8000978:	42a9      	cmp	r1, r5
 800097a:	d905      	bls.n	8000988 <_malloc_r+0x28>
 800097c:	230c      	movs	r3, #12
 800097e:	2600      	movs	r6, #0
 8000980:	603b      	str	r3, [r7, #0]
 8000982:	4630      	mov	r0, r6
 8000984:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000988:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a5c <_malloc_r+0xfc>
 800098c:	f000 f868 	bl	8000a60 <__malloc_lock>
 8000990:	f8d8 3000 	ldr.w	r3, [r8]
 8000994:	461c      	mov	r4, r3
 8000996:	bb5c      	cbnz	r4, 80009f0 <_malloc_r+0x90>
 8000998:	4629      	mov	r1, r5
 800099a:	4638      	mov	r0, r7
 800099c:	f7ff ffc0 	bl	8000920 <sbrk_aligned>
 80009a0:	1c43      	adds	r3, r0, #1
 80009a2:	4604      	mov	r4, r0
 80009a4:	d155      	bne.n	8000a52 <_malloc_r+0xf2>
 80009a6:	f8d8 4000 	ldr.w	r4, [r8]
 80009aa:	4626      	mov	r6, r4
 80009ac:	2e00      	cmp	r6, #0
 80009ae:	d145      	bne.n	8000a3c <_malloc_r+0xdc>
 80009b0:	2c00      	cmp	r4, #0
 80009b2:	d048      	beq.n	8000a46 <_malloc_r+0xe6>
 80009b4:	6823      	ldr	r3, [r4, #0]
 80009b6:	4631      	mov	r1, r6
 80009b8:	4638      	mov	r0, r7
 80009ba:	eb04 0903 	add.w	r9, r4, r3
 80009be:	f000 fc71 	bl	80012a4 <_sbrk_r>
 80009c2:	4581      	cmp	r9, r0
 80009c4:	d13f      	bne.n	8000a46 <_malloc_r+0xe6>
 80009c6:	6821      	ldr	r1, [r4, #0]
 80009c8:	4638      	mov	r0, r7
 80009ca:	1a6d      	subs	r5, r5, r1
 80009cc:	4629      	mov	r1, r5
 80009ce:	f7ff ffa7 	bl	8000920 <sbrk_aligned>
 80009d2:	3001      	adds	r0, #1
 80009d4:	d037      	beq.n	8000a46 <_malloc_r+0xe6>
 80009d6:	6823      	ldr	r3, [r4, #0]
 80009d8:	442b      	add	r3, r5
 80009da:	6023      	str	r3, [r4, #0]
 80009dc:	f8d8 3000 	ldr.w	r3, [r8]
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d038      	beq.n	8000a56 <_malloc_r+0xf6>
 80009e4:	685a      	ldr	r2, [r3, #4]
 80009e6:	42a2      	cmp	r2, r4
 80009e8:	d12b      	bne.n	8000a42 <_malloc_r+0xe2>
 80009ea:	2200      	movs	r2, #0
 80009ec:	605a      	str	r2, [r3, #4]
 80009ee:	e00f      	b.n	8000a10 <_malloc_r+0xb0>
 80009f0:	6822      	ldr	r2, [r4, #0]
 80009f2:	1b52      	subs	r2, r2, r5
 80009f4:	d41f      	bmi.n	8000a36 <_malloc_r+0xd6>
 80009f6:	2a0b      	cmp	r2, #11
 80009f8:	d917      	bls.n	8000a2a <_malloc_r+0xca>
 80009fa:	1961      	adds	r1, r4, r5
 80009fc:	42a3      	cmp	r3, r4
 80009fe:	6025      	str	r5, [r4, #0]
 8000a00:	bf18      	it	ne
 8000a02:	6059      	strne	r1, [r3, #4]
 8000a04:	6863      	ldr	r3, [r4, #4]
 8000a06:	bf08      	it	eq
 8000a08:	f8c8 1000 	streq.w	r1, [r8]
 8000a0c:	5162      	str	r2, [r4, r5]
 8000a0e:	604b      	str	r3, [r1, #4]
 8000a10:	4638      	mov	r0, r7
 8000a12:	f104 060b 	add.w	r6, r4, #11
 8000a16:	f000 f829 	bl	8000a6c <__malloc_unlock>
 8000a1a:	f026 0607 	bic.w	r6, r6, #7
 8000a1e:	1d23      	adds	r3, r4, #4
 8000a20:	1af2      	subs	r2, r6, r3
 8000a22:	d0ae      	beq.n	8000982 <_malloc_r+0x22>
 8000a24:	1b9b      	subs	r3, r3, r6
 8000a26:	50a3      	str	r3, [r4, r2]
 8000a28:	e7ab      	b.n	8000982 <_malloc_r+0x22>
 8000a2a:	42a3      	cmp	r3, r4
 8000a2c:	6862      	ldr	r2, [r4, #4]
 8000a2e:	d1dd      	bne.n	80009ec <_malloc_r+0x8c>
 8000a30:	f8c8 2000 	str.w	r2, [r8]
 8000a34:	e7ec      	b.n	8000a10 <_malloc_r+0xb0>
 8000a36:	4623      	mov	r3, r4
 8000a38:	6864      	ldr	r4, [r4, #4]
 8000a3a:	e7ac      	b.n	8000996 <_malloc_r+0x36>
 8000a3c:	4634      	mov	r4, r6
 8000a3e:	6876      	ldr	r6, [r6, #4]
 8000a40:	e7b4      	b.n	80009ac <_malloc_r+0x4c>
 8000a42:	4613      	mov	r3, r2
 8000a44:	e7cc      	b.n	80009e0 <_malloc_r+0x80>
 8000a46:	230c      	movs	r3, #12
 8000a48:	4638      	mov	r0, r7
 8000a4a:	603b      	str	r3, [r7, #0]
 8000a4c:	f000 f80e 	bl	8000a6c <__malloc_unlock>
 8000a50:	e797      	b.n	8000982 <_malloc_r+0x22>
 8000a52:	6025      	str	r5, [r4, #0]
 8000a54:	e7dc      	b.n	8000a10 <_malloc_r+0xb0>
 8000a56:	605b      	str	r3, [r3, #4]
 8000a58:	deff      	udf	#255	; 0xff
 8000a5a:	bf00      	nop
 8000a5c:	200001c4 	.word	0x200001c4

08000a60 <__malloc_lock>:
 8000a60:	4801      	ldr	r0, [pc, #4]	; (8000a68 <__malloc_lock+0x8>)
 8000a62:	f7ff bf12 	b.w	800088a <__retarget_lock_acquire_recursive>
 8000a66:	bf00      	nop
 8000a68:	200001c0 	.word	0x200001c0

08000a6c <__malloc_unlock>:
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <__malloc_unlock+0x8>)
 8000a6e:	f7ff bf0d 	b.w	800088c <__retarget_lock_release_recursive>
 8000a72:	bf00      	nop
 8000a74:	200001c0 	.word	0x200001c0

08000a78 <__sfputc_r>:
 8000a78:	6893      	ldr	r3, [r2, #8]
 8000a7a:	b410      	push	{r4}
 8000a7c:	3b01      	subs	r3, #1
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	6093      	str	r3, [r2, #8]
 8000a82:	da07      	bge.n	8000a94 <__sfputc_r+0x1c>
 8000a84:	6994      	ldr	r4, [r2, #24]
 8000a86:	42a3      	cmp	r3, r4
 8000a88:	db01      	blt.n	8000a8e <__sfputc_r+0x16>
 8000a8a:	290a      	cmp	r1, #10
 8000a8c:	d102      	bne.n	8000a94 <__sfputc_r+0x1c>
 8000a8e:	bc10      	pop	{r4}
 8000a90:	f000 bb72 	b.w	8001178 <__swbuf_r>
 8000a94:	6813      	ldr	r3, [r2, #0]
 8000a96:	1c58      	adds	r0, r3, #1
 8000a98:	6010      	str	r0, [r2, #0]
 8000a9a:	7019      	strb	r1, [r3, #0]
 8000a9c:	4608      	mov	r0, r1
 8000a9e:	bc10      	pop	{r4}
 8000aa0:	4770      	bx	lr

08000aa2 <__sfputs_r>:
 8000aa2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aa4:	4606      	mov	r6, r0
 8000aa6:	460f      	mov	r7, r1
 8000aa8:	4614      	mov	r4, r2
 8000aaa:	18d5      	adds	r5, r2, r3
 8000aac:	42ac      	cmp	r4, r5
 8000aae:	d101      	bne.n	8000ab4 <__sfputs_r+0x12>
 8000ab0:	2000      	movs	r0, #0
 8000ab2:	e007      	b.n	8000ac4 <__sfputs_r+0x22>
 8000ab4:	463a      	mov	r2, r7
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000abc:	f7ff ffdc 	bl	8000a78 <__sfputc_r>
 8000ac0:	1c43      	adds	r3, r0, #1
 8000ac2:	d1f3      	bne.n	8000aac <__sfputs_r+0xa>
 8000ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ac8 <_vfiprintf_r>:
 8000ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000acc:	460d      	mov	r5, r1
 8000ace:	4614      	mov	r4, r2
 8000ad0:	4698      	mov	r8, r3
 8000ad2:	4606      	mov	r6, r0
 8000ad4:	b09d      	sub	sp, #116	; 0x74
 8000ad6:	b118      	cbz	r0, 8000ae0 <_vfiprintf_r+0x18>
 8000ad8:	6a03      	ldr	r3, [r0, #32]
 8000ada:	b90b      	cbnz	r3, 8000ae0 <_vfiprintf_r+0x18>
 8000adc:	f7ff fdd0 	bl	8000680 <__sinit>
 8000ae0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ae2:	07d9      	lsls	r1, r3, #31
 8000ae4:	d405      	bmi.n	8000af2 <_vfiprintf_r+0x2a>
 8000ae6:	89ab      	ldrh	r3, [r5, #12]
 8000ae8:	059a      	lsls	r2, r3, #22
 8000aea:	d402      	bmi.n	8000af2 <_vfiprintf_r+0x2a>
 8000aec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aee:	f7ff fecc 	bl	800088a <__retarget_lock_acquire_recursive>
 8000af2:	89ab      	ldrh	r3, [r5, #12]
 8000af4:	071b      	lsls	r3, r3, #28
 8000af6:	d501      	bpl.n	8000afc <_vfiprintf_r+0x34>
 8000af8:	692b      	ldr	r3, [r5, #16]
 8000afa:	b99b      	cbnz	r3, 8000b24 <_vfiprintf_r+0x5c>
 8000afc:	4629      	mov	r1, r5
 8000afe:	4630      	mov	r0, r6
 8000b00:	f000 fb78 	bl	80011f4 <__swsetup_r>
 8000b04:	b170      	cbz	r0, 8000b24 <_vfiprintf_r+0x5c>
 8000b06:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b08:	07dc      	lsls	r4, r3, #31
 8000b0a:	d504      	bpl.n	8000b16 <_vfiprintf_r+0x4e>
 8000b0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b10:	b01d      	add	sp, #116	; 0x74
 8000b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b16:	89ab      	ldrh	r3, [r5, #12]
 8000b18:	0598      	lsls	r0, r3, #22
 8000b1a:	d4f7      	bmi.n	8000b0c <_vfiprintf_r+0x44>
 8000b1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b1e:	f7ff feb5 	bl	800088c <__retarget_lock_release_recursive>
 8000b22:	e7f3      	b.n	8000b0c <_vfiprintf_r+0x44>
 8000b24:	2300      	movs	r3, #0
 8000b26:	9309      	str	r3, [sp, #36]	; 0x24
 8000b28:	2320      	movs	r3, #32
 8000b2a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b2e:	2330      	movs	r3, #48	; 0x30
 8000b30:	f04f 0901 	mov.w	r9, #1
 8000b34:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b38:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8000ce8 <_vfiprintf_r+0x220>
 8000b3c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b40:	4623      	mov	r3, r4
 8000b42:	469a      	mov	sl, r3
 8000b44:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b48:	b10a      	cbz	r2, 8000b4e <_vfiprintf_r+0x86>
 8000b4a:	2a25      	cmp	r2, #37	; 0x25
 8000b4c:	d1f9      	bne.n	8000b42 <_vfiprintf_r+0x7a>
 8000b4e:	ebba 0b04 	subs.w	fp, sl, r4
 8000b52:	d00b      	beq.n	8000b6c <_vfiprintf_r+0xa4>
 8000b54:	465b      	mov	r3, fp
 8000b56:	4622      	mov	r2, r4
 8000b58:	4629      	mov	r1, r5
 8000b5a:	4630      	mov	r0, r6
 8000b5c:	f7ff ffa1 	bl	8000aa2 <__sfputs_r>
 8000b60:	3001      	adds	r0, #1
 8000b62:	f000 80a9 	beq.w	8000cb8 <_vfiprintf_r+0x1f0>
 8000b66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b68:	445a      	add	r2, fp
 8000b6a:	9209      	str	r2, [sp, #36]	; 0x24
 8000b6c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	f000 80a1 	beq.w	8000cb8 <_vfiprintf_r+0x1f0>
 8000b76:	2300      	movs	r3, #0
 8000b78:	f04f 32ff 	mov.w	r2, #4294967295
 8000b7c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b80:	f10a 0a01 	add.w	sl, sl, #1
 8000b84:	9304      	str	r3, [sp, #16]
 8000b86:	9307      	str	r3, [sp, #28]
 8000b88:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b8c:	931a      	str	r3, [sp, #104]	; 0x68
 8000b8e:	4654      	mov	r4, sl
 8000b90:	2205      	movs	r2, #5
 8000b92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b96:	4854      	ldr	r0, [pc, #336]	; (8000ce8 <_vfiprintf_r+0x220>)
 8000b98:	f000 fb94 	bl	80012c4 <memchr>
 8000b9c:	9a04      	ldr	r2, [sp, #16]
 8000b9e:	b9d8      	cbnz	r0, 8000bd8 <_vfiprintf_r+0x110>
 8000ba0:	06d1      	lsls	r1, r2, #27
 8000ba2:	bf44      	itt	mi
 8000ba4:	2320      	movmi	r3, #32
 8000ba6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000baa:	0713      	lsls	r3, r2, #28
 8000bac:	bf44      	itt	mi
 8000bae:	232b      	movmi	r3, #43	; 0x2b
 8000bb0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bb4:	f89a 3000 	ldrb.w	r3, [sl]
 8000bb8:	2b2a      	cmp	r3, #42	; 0x2a
 8000bba:	d015      	beq.n	8000be8 <_vfiprintf_r+0x120>
 8000bbc:	4654      	mov	r4, sl
 8000bbe:	2000      	movs	r0, #0
 8000bc0:	f04f 0c0a 	mov.w	ip, #10
 8000bc4:	9a07      	ldr	r2, [sp, #28]
 8000bc6:	4621      	mov	r1, r4
 8000bc8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bcc:	3b30      	subs	r3, #48	; 0x30
 8000bce:	2b09      	cmp	r3, #9
 8000bd0:	d94d      	bls.n	8000c6e <_vfiprintf_r+0x1a6>
 8000bd2:	b1b0      	cbz	r0, 8000c02 <_vfiprintf_r+0x13a>
 8000bd4:	9207      	str	r2, [sp, #28]
 8000bd6:	e014      	b.n	8000c02 <_vfiprintf_r+0x13a>
 8000bd8:	eba0 0308 	sub.w	r3, r0, r8
 8000bdc:	fa09 f303 	lsl.w	r3, r9, r3
 8000be0:	4313      	orrs	r3, r2
 8000be2:	46a2      	mov	sl, r4
 8000be4:	9304      	str	r3, [sp, #16]
 8000be6:	e7d2      	b.n	8000b8e <_vfiprintf_r+0xc6>
 8000be8:	9b03      	ldr	r3, [sp, #12]
 8000bea:	1d19      	adds	r1, r3, #4
 8000bec:	681b      	ldr	r3, [r3, #0]
 8000bee:	9103      	str	r1, [sp, #12]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	bfbb      	ittet	lt
 8000bf4:	425b      	neglt	r3, r3
 8000bf6:	f042 0202 	orrlt.w	r2, r2, #2
 8000bfa:	9307      	strge	r3, [sp, #28]
 8000bfc:	9307      	strlt	r3, [sp, #28]
 8000bfe:	bfb8      	it	lt
 8000c00:	9204      	strlt	r2, [sp, #16]
 8000c02:	7823      	ldrb	r3, [r4, #0]
 8000c04:	2b2e      	cmp	r3, #46	; 0x2e
 8000c06:	d10c      	bne.n	8000c22 <_vfiprintf_r+0x15a>
 8000c08:	7863      	ldrb	r3, [r4, #1]
 8000c0a:	2b2a      	cmp	r3, #42	; 0x2a
 8000c0c:	d134      	bne.n	8000c78 <_vfiprintf_r+0x1b0>
 8000c0e:	9b03      	ldr	r3, [sp, #12]
 8000c10:	3402      	adds	r4, #2
 8000c12:	1d1a      	adds	r2, r3, #4
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	9203      	str	r2, [sp, #12]
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	bfb8      	it	lt
 8000c1c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c20:	9305      	str	r3, [sp, #20]
 8000c22:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000cec <_vfiprintf_r+0x224>
 8000c26:	2203      	movs	r2, #3
 8000c28:	4650      	mov	r0, sl
 8000c2a:	7821      	ldrb	r1, [r4, #0]
 8000c2c:	f000 fb4a 	bl	80012c4 <memchr>
 8000c30:	b138      	cbz	r0, 8000c42 <_vfiprintf_r+0x17a>
 8000c32:	2240      	movs	r2, #64	; 0x40
 8000c34:	9b04      	ldr	r3, [sp, #16]
 8000c36:	eba0 000a 	sub.w	r0, r0, sl
 8000c3a:	4082      	lsls	r2, r0
 8000c3c:	4313      	orrs	r3, r2
 8000c3e:	3401      	adds	r4, #1
 8000c40:	9304      	str	r3, [sp, #16]
 8000c42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c46:	2206      	movs	r2, #6
 8000c48:	4829      	ldr	r0, [pc, #164]	; (8000cf0 <_vfiprintf_r+0x228>)
 8000c4a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c4e:	f000 fb39 	bl	80012c4 <memchr>
 8000c52:	2800      	cmp	r0, #0
 8000c54:	d03f      	beq.n	8000cd6 <_vfiprintf_r+0x20e>
 8000c56:	4b27      	ldr	r3, [pc, #156]	; (8000cf4 <_vfiprintf_r+0x22c>)
 8000c58:	bb1b      	cbnz	r3, 8000ca2 <_vfiprintf_r+0x1da>
 8000c5a:	9b03      	ldr	r3, [sp, #12]
 8000c5c:	3307      	adds	r3, #7
 8000c5e:	f023 0307 	bic.w	r3, r3, #7
 8000c62:	3308      	adds	r3, #8
 8000c64:	9303      	str	r3, [sp, #12]
 8000c66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c68:	443b      	add	r3, r7
 8000c6a:	9309      	str	r3, [sp, #36]	; 0x24
 8000c6c:	e768      	b.n	8000b40 <_vfiprintf_r+0x78>
 8000c6e:	460c      	mov	r4, r1
 8000c70:	2001      	movs	r0, #1
 8000c72:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c76:	e7a6      	b.n	8000bc6 <_vfiprintf_r+0xfe>
 8000c78:	2300      	movs	r3, #0
 8000c7a:	f04f 0c0a 	mov.w	ip, #10
 8000c7e:	4619      	mov	r1, r3
 8000c80:	3401      	adds	r4, #1
 8000c82:	9305      	str	r3, [sp, #20]
 8000c84:	4620      	mov	r0, r4
 8000c86:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c8a:	3a30      	subs	r2, #48	; 0x30
 8000c8c:	2a09      	cmp	r2, #9
 8000c8e:	d903      	bls.n	8000c98 <_vfiprintf_r+0x1d0>
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	d0c6      	beq.n	8000c22 <_vfiprintf_r+0x15a>
 8000c94:	9105      	str	r1, [sp, #20]
 8000c96:	e7c4      	b.n	8000c22 <_vfiprintf_r+0x15a>
 8000c98:	4604      	mov	r4, r0
 8000c9a:	2301      	movs	r3, #1
 8000c9c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ca0:	e7f0      	b.n	8000c84 <_vfiprintf_r+0x1bc>
 8000ca2:	ab03      	add	r3, sp, #12
 8000ca4:	9300      	str	r3, [sp, #0]
 8000ca6:	462a      	mov	r2, r5
 8000ca8:	4630      	mov	r0, r6
 8000caa:	4b13      	ldr	r3, [pc, #76]	; (8000cf8 <_vfiprintf_r+0x230>)
 8000cac:	a904      	add	r1, sp, #16
 8000cae:	f3af 8000 	nop.w
 8000cb2:	4607      	mov	r7, r0
 8000cb4:	1c78      	adds	r0, r7, #1
 8000cb6:	d1d6      	bne.n	8000c66 <_vfiprintf_r+0x19e>
 8000cb8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cba:	07d9      	lsls	r1, r3, #31
 8000cbc:	d405      	bmi.n	8000cca <_vfiprintf_r+0x202>
 8000cbe:	89ab      	ldrh	r3, [r5, #12]
 8000cc0:	059a      	lsls	r2, r3, #22
 8000cc2:	d402      	bmi.n	8000cca <_vfiprintf_r+0x202>
 8000cc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cc6:	f7ff fde1 	bl	800088c <__retarget_lock_release_recursive>
 8000cca:	89ab      	ldrh	r3, [r5, #12]
 8000ccc:	065b      	lsls	r3, r3, #25
 8000cce:	f53f af1d 	bmi.w	8000b0c <_vfiprintf_r+0x44>
 8000cd2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000cd4:	e71c      	b.n	8000b10 <_vfiprintf_r+0x48>
 8000cd6:	ab03      	add	r3, sp, #12
 8000cd8:	9300      	str	r3, [sp, #0]
 8000cda:	462a      	mov	r2, r5
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4b06      	ldr	r3, [pc, #24]	; (8000cf8 <_vfiprintf_r+0x230>)
 8000ce0:	a904      	add	r1, sp, #16
 8000ce2:	f000 f87d 	bl	8000de0 <_printf_i>
 8000ce6:	e7e4      	b.n	8000cb2 <_vfiprintf_r+0x1ea>
 8000ce8:	08001410 	.word	0x08001410
 8000cec:	08001416 	.word	0x08001416
 8000cf0:	0800141a 	.word	0x0800141a
 8000cf4:	00000000 	.word	0x00000000
 8000cf8:	08000aa3 	.word	0x08000aa3

08000cfc <_printf_common>:
 8000cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d00:	4616      	mov	r6, r2
 8000d02:	4699      	mov	r9, r3
 8000d04:	688a      	ldr	r2, [r1, #8]
 8000d06:	690b      	ldr	r3, [r1, #16]
 8000d08:	4607      	mov	r7, r0
 8000d0a:	4293      	cmp	r3, r2
 8000d0c:	bfb8      	it	lt
 8000d0e:	4613      	movlt	r3, r2
 8000d10:	6033      	str	r3, [r6, #0]
 8000d12:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d16:	460c      	mov	r4, r1
 8000d18:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d1c:	b10a      	cbz	r2, 8000d22 <_printf_common+0x26>
 8000d1e:	3301      	adds	r3, #1
 8000d20:	6033      	str	r3, [r6, #0]
 8000d22:	6823      	ldr	r3, [r4, #0]
 8000d24:	0699      	lsls	r1, r3, #26
 8000d26:	bf42      	ittt	mi
 8000d28:	6833      	ldrmi	r3, [r6, #0]
 8000d2a:	3302      	addmi	r3, #2
 8000d2c:	6033      	strmi	r3, [r6, #0]
 8000d2e:	6825      	ldr	r5, [r4, #0]
 8000d30:	f015 0506 	ands.w	r5, r5, #6
 8000d34:	d106      	bne.n	8000d44 <_printf_common+0x48>
 8000d36:	f104 0a19 	add.w	sl, r4, #25
 8000d3a:	68e3      	ldr	r3, [r4, #12]
 8000d3c:	6832      	ldr	r2, [r6, #0]
 8000d3e:	1a9b      	subs	r3, r3, r2
 8000d40:	42ab      	cmp	r3, r5
 8000d42:	dc2b      	bgt.n	8000d9c <_printf_common+0xa0>
 8000d44:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d48:	1e13      	subs	r3, r2, #0
 8000d4a:	6822      	ldr	r2, [r4, #0]
 8000d4c:	bf18      	it	ne
 8000d4e:	2301      	movne	r3, #1
 8000d50:	0692      	lsls	r2, r2, #26
 8000d52:	d430      	bmi.n	8000db6 <_printf_common+0xba>
 8000d54:	4649      	mov	r1, r9
 8000d56:	4638      	mov	r0, r7
 8000d58:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d5c:	47c0      	blx	r8
 8000d5e:	3001      	adds	r0, #1
 8000d60:	d023      	beq.n	8000daa <_printf_common+0xae>
 8000d62:	6823      	ldr	r3, [r4, #0]
 8000d64:	6922      	ldr	r2, [r4, #16]
 8000d66:	f003 0306 	and.w	r3, r3, #6
 8000d6a:	2b04      	cmp	r3, #4
 8000d6c:	bf14      	ite	ne
 8000d6e:	2500      	movne	r5, #0
 8000d70:	6833      	ldreq	r3, [r6, #0]
 8000d72:	f04f 0600 	mov.w	r6, #0
 8000d76:	bf08      	it	eq
 8000d78:	68e5      	ldreq	r5, [r4, #12]
 8000d7a:	f104 041a 	add.w	r4, r4, #26
 8000d7e:	bf08      	it	eq
 8000d80:	1aed      	subeq	r5, r5, r3
 8000d82:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000d86:	bf08      	it	eq
 8000d88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d8c:	4293      	cmp	r3, r2
 8000d8e:	bfc4      	itt	gt
 8000d90:	1a9b      	subgt	r3, r3, r2
 8000d92:	18ed      	addgt	r5, r5, r3
 8000d94:	42b5      	cmp	r5, r6
 8000d96:	d11a      	bne.n	8000dce <_printf_common+0xd2>
 8000d98:	2000      	movs	r0, #0
 8000d9a:	e008      	b.n	8000dae <_printf_common+0xb2>
 8000d9c:	2301      	movs	r3, #1
 8000d9e:	4652      	mov	r2, sl
 8000da0:	4649      	mov	r1, r9
 8000da2:	4638      	mov	r0, r7
 8000da4:	47c0      	blx	r8
 8000da6:	3001      	adds	r0, #1
 8000da8:	d103      	bne.n	8000db2 <_printf_common+0xb6>
 8000daa:	f04f 30ff 	mov.w	r0, #4294967295
 8000dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000db2:	3501      	adds	r5, #1
 8000db4:	e7c1      	b.n	8000d3a <_printf_common+0x3e>
 8000db6:	2030      	movs	r0, #48	; 0x30
 8000db8:	18e1      	adds	r1, r4, r3
 8000dba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000dbe:	1c5a      	adds	r2, r3, #1
 8000dc0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000dc4:	4422      	add	r2, r4
 8000dc6:	3302      	adds	r3, #2
 8000dc8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000dcc:	e7c2      	b.n	8000d54 <_printf_common+0x58>
 8000dce:	2301      	movs	r3, #1
 8000dd0:	4622      	mov	r2, r4
 8000dd2:	4649      	mov	r1, r9
 8000dd4:	4638      	mov	r0, r7
 8000dd6:	47c0      	blx	r8
 8000dd8:	3001      	adds	r0, #1
 8000dda:	d0e6      	beq.n	8000daa <_printf_common+0xae>
 8000ddc:	3601      	adds	r6, #1
 8000dde:	e7d9      	b.n	8000d94 <_printf_common+0x98>

08000de0 <_printf_i>:
 8000de0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000de4:	7e0f      	ldrb	r7, [r1, #24]
 8000de6:	4691      	mov	r9, r2
 8000de8:	2f78      	cmp	r7, #120	; 0x78
 8000dea:	4680      	mov	r8, r0
 8000dec:	460c      	mov	r4, r1
 8000dee:	469a      	mov	sl, r3
 8000df0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000df2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000df6:	d807      	bhi.n	8000e08 <_printf_i+0x28>
 8000df8:	2f62      	cmp	r7, #98	; 0x62
 8000dfa:	d80a      	bhi.n	8000e12 <_printf_i+0x32>
 8000dfc:	2f00      	cmp	r7, #0
 8000dfe:	f000 80d5 	beq.w	8000fac <_printf_i+0x1cc>
 8000e02:	2f58      	cmp	r7, #88	; 0x58
 8000e04:	f000 80c1 	beq.w	8000f8a <_printf_i+0x1aa>
 8000e08:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e0c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e10:	e03a      	b.n	8000e88 <_printf_i+0xa8>
 8000e12:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e16:	2b15      	cmp	r3, #21
 8000e18:	d8f6      	bhi.n	8000e08 <_printf_i+0x28>
 8000e1a:	a101      	add	r1, pc, #4	; (adr r1, 8000e20 <_printf_i+0x40>)
 8000e1c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e20:	08000e79 	.word	0x08000e79
 8000e24:	08000e8d 	.word	0x08000e8d
 8000e28:	08000e09 	.word	0x08000e09
 8000e2c:	08000e09 	.word	0x08000e09
 8000e30:	08000e09 	.word	0x08000e09
 8000e34:	08000e09 	.word	0x08000e09
 8000e38:	08000e8d 	.word	0x08000e8d
 8000e3c:	08000e09 	.word	0x08000e09
 8000e40:	08000e09 	.word	0x08000e09
 8000e44:	08000e09 	.word	0x08000e09
 8000e48:	08000e09 	.word	0x08000e09
 8000e4c:	08000f93 	.word	0x08000f93
 8000e50:	08000eb9 	.word	0x08000eb9
 8000e54:	08000f4d 	.word	0x08000f4d
 8000e58:	08000e09 	.word	0x08000e09
 8000e5c:	08000e09 	.word	0x08000e09
 8000e60:	08000fb5 	.word	0x08000fb5
 8000e64:	08000e09 	.word	0x08000e09
 8000e68:	08000eb9 	.word	0x08000eb9
 8000e6c:	08000e09 	.word	0x08000e09
 8000e70:	08000e09 	.word	0x08000e09
 8000e74:	08000f55 	.word	0x08000f55
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	1d1a      	adds	r2, r3, #4
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	602a      	str	r2, [r5, #0]
 8000e80:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e84:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e88:	2301      	movs	r3, #1
 8000e8a:	e0a0      	b.n	8000fce <_printf_i+0x1ee>
 8000e8c:	6820      	ldr	r0, [r4, #0]
 8000e8e:	682b      	ldr	r3, [r5, #0]
 8000e90:	0607      	lsls	r7, r0, #24
 8000e92:	f103 0104 	add.w	r1, r3, #4
 8000e96:	6029      	str	r1, [r5, #0]
 8000e98:	d501      	bpl.n	8000e9e <_printf_i+0xbe>
 8000e9a:	681e      	ldr	r6, [r3, #0]
 8000e9c:	e003      	b.n	8000ea6 <_printf_i+0xc6>
 8000e9e:	0646      	lsls	r6, r0, #25
 8000ea0:	d5fb      	bpl.n	8000e9a <_printf_i+0xba>
 8000ea2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000ea6:	2e00      	cmp	r6, #0
 8000ea8:	da03      	bge.n	8000eb2 <_printf_i+0xd2>
 8000eaa:	232d      	movs	r3, #45	; 0x2d
 8000eac:	4276      	negs	r6, r6
 8000eae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000eb2:	230a      	movs	r3, #10
 8000eb4:	4859      	ldr	r0, [pc, #356]	; (800101c <_printf_i+0x23c>)
 8000eb6:	e012      	b.n	8000ede <_printf_i+0xfe>
 8000eb8:	682b      	ldr	r3, [r5, #0]
 8000eba:	6820      	ldr	r0, [r4, #0]
 8000ebc:	1d19      	adds	r1, r3, #4
 8000ebe:	6029      	str	r1, [r5, #0]
 8000ec0:	0605      	lsls	r5, r0, #24
 8000ec2:	d501      	bpl.n	8000ec8 <_printf_i+0xe8>
 8000ec4:	681e      	ldr	r6, [r3, #0]
 8000ec6:	e002      	b.n	8000ece <_printf_i+0xee>
 8000ec8:	0641      	lsls	r1, r0, #25
 8000eca:	d5fb      	bpl.n	8000ec4 <_printf_i+0xe4>
 8000ecc:	881e      	ldrh	r6, [r3, #0]
 8000ece:	2f6f      	cmp	r7, #111	; 0x6f
 8000ed0:	bf0c      	ite	eq
 8000ed2:	2308      	moveq	r3, #8
 8000ed4:	230a      	movne	r3, #10
 8000ed6:	4851      	ldr	r0, [pc, #324]	; (800101c <_printf_i+0x23c>)
 8000ed8:	2100      	movs	r1, #0
 8000eda:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ede:	6865      	ldr	r5, [r4, #4]
 8000ee0:	2d00      	cmp	r5, #0
 8000ee2:	bfa8      	it	ge
 8000ee4:	6821      	ldrge	r1, [r4, #0]
 8000ee6:	60a5      	str	r5, [r4, #8]
 8000ee8:	bfa4      	itt	ge
 8000eea:	f021 0104 	bicge.w	r1, r1, #4
 8000eee:	6021      	strge	r1, [r4, #0]
 8000ef0:	b90e      	cbnz	r6, 8000ef6 <_printf_i+0x116>
 8000ef2:	2d00      	cmp	r5, #0
 8000ef4:	d04b      	beq.n	8000f8e <_printf_i+0x1ae>
 8000ef6:	4615      	mov	r5, r2
 8000ef8:	fbb6 f1f3 	udiv	r1, r6, r3
 8000efc:	fb03 6711 	mls	r7, r3, r1, r6
 8000f00:	5dc7      	ldrb	r7, [r0, r7]
 8000f02:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000f06:	4637      	mov	r7, r6
 8000f08:	42bb      	cmp	r3, r7
 8000f0a:	460e      	mov	r6, r1
 8000f0c:	d9f4      	bls.n	8000ef8 <_printf_i+0x118>
 8000f0e:	2b08      	cmp	r3, #8
 8000f10:	d10b      	bne.n	8000f2a <_printf_i+0x14a>
 8000f12:	6823      	ldr	r3, [r4, #0]
 8000f14:	07de      	lsls	r6, r3, #31
 8000f16:	d508      	bpl.n	8000f2a <_printf_i+0x14a>
 8000f18:	6923      	ldr	r3, [r4, #16]
 8000f1a:	6861      	ldr	r1, [r4, #4]
 8000f1c:	4299      	cmp	r1, r3
 8000f1e:	bfde      	ittt	le
 8000f20:	2330      	movle	r3, #48	; 0x30
 8000f22:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f26:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f2a:	1b52      	subs	r2, r2, r5
 8000f2c:	6122      	str	r2, [r4, #16]
 8000f2e:	464b      	mov	r3, r9
 8000f30:	4621      	mov	r1, r4
 8000f32:	4640      	mov	r0, r8
 8000f34:	f8cd a000 	str.w	sl, [sp]
 8000f38:	aa03      	add	r2, sp, #12
 8000f3a:	f7ff fedf 	bl	8000cfc <_printf_common>
 8000f3e:	3001      	adds	r0, #1
 8000f40:	d14a      	bne.n	8000fd8 <_printf_i+0x1f8>
 8000f42:	f04f 30ff 	mov.w	r0, #4294967295
 8000f46:	b004      	add	sp, #16
 8000f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4c:	6823      	ldr	r3, [r4, #0]
 8000f4e:	f043 0320 	orr.w	r3, r3, #32
 8000f52:	6023      	str	r3, [r4, #0]
 8000f54:	2778      	movs	r7, #120	; 0x78
 8000f56:	4832      	ldr	r0, [pc, #200]	; (8001020 <_printf_i+0x240>)
 8000f58:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f5c:	6823      	ldr	r3, [r4, #0]
 8000f5e:	6829      	ldr	r1, [r5, #0]
 8000f60:	061f      	lsls	r7, r3, #24
 8000f62:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f66:	d402      	bmi.n	8000f6e <_printf_i+0x18e>
 8000f68:	065f      	lsls	r7, r3, #25
 8000f6a:	bf48      	it	mi
 8000f6c:	b2b6      	uxthmi	r6, r6
 8000f6e:	07df      	lsls	r7, r3, #31
 8000f70:	bf48      	it	mi
 8000f72:	f043 0320 	orrmi.w	r3, r3, #32
 8000f76:	6029      	str	r1, [r5, #0]
 8000f78:	bf48      	it	mi
 8000f7a:	6023      	strmi	r3, [r4, #0]
 8000f7c:	b91e      	cbnz	r6, 8000f86 <_printf_i+0x1a6>
 8000f7e:	6823      	ldr	r3, [r4, #0]
 8000f80:	f023 0320 	bic.w	r3, r3, #32
 8000f84:	6023      	str	r3, [r4, #0]
 8000f86:	2310      	movs	r3, #16
 8000f88:	e7a6      	b.n	8000ed8 <_printf_i+0xf8>
 8000f8a:	4824      	ldr	r0, [pc, #144]	; (800101c <_printf_i+0x23c>)
 8000f8c:	e7e4      	b.n	8000f58 <_printf_i+0x178>
 8000f8e:	4615      	mov	r5, r2
 8000f90:	e7bd      	b.n	8000f0e <_printf_i+0x12e>
 8000f92:	682b      	ldr	r3, [r5, #0]
 8000f94:	6826      	ldr	r6, [r4, #0]
 8000f96:	1d18      	adds	r0, r3, #4
 8000f98:	6961      	ldr	r1, [r4, #20]
 8000f9a:	6028      	str	r0, [r5, #0]
 8000f9c:	0635      	lsls	r5, r6, #24
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	d501      	bpl.n	8000fa6 <_printf_i+0x1c6>
 8000fa2:	6019      	str	r1, [r3, #0]
 8000fa4:	e002      	b.n	8000fac <_printf_i+0x1cc>
 8000fa6:	0670      	lsls	r0, r6, #25
 8000fa8:	d5fb      	bpl.n	8000fa2 <_printf_i+0x1c2>
 8000faa:	8019      	strh	r1, [r3, #0]
 8000fac:	2300      	movs	r3, #0
 8000fae:	4615      	mov	r5, r2
 8000fb0:	6123      	str	r3, [r4, #16]
 8000fb2:	e7bc      	b.n	8000f2e <_printf_i+0x14e>
 8000fb4:	682b      	ldr	r3, [r5, #0]
 8000fb6:	2100      	movs	r1, #0
 8000fb8:	1d1a      	adds	r2, r3, #4
 8000fba:	602a      	str	r2, [r5, #0]
 8000fbc:	681d      	ldr	r5, [r3, #0]
 8000fbe:	6862      	ldr	r2, [r4, #4]
 8000fc0:	4628      	mov	r0, r5
 8000fc2:	f000 f97f 	bl	80012c4 <memchr>
 8000fc6:	b108      	cbz	r0, 8000fcc <_printf_i+0x1ec>
 8000fc8:	1b40      	subs	r0, r0, r5
 8000fca:	6060      	str	r0, [r4, #4]
 8000fcc:	6863      	ldr	r3, [r4, #4]
 8000fce:	6123      	str	r3, [r4, #16]
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fd6:	e7aa      	b.n	8000f2e <_printf_i+0x14e>
 8000fd8:	462a      	mov	r2, r5
 8000fda:	4649      	mov	r1, r9
 8000fdc:	4640      	mov	r0, r8
 8000fde:	6923      	ldr	r3, [r4, #16]
 8000fe0:	47d0      	blx	sl
 8000fe2:	3001      	adds	r0, #1
 8000fe4:	d0ad      	beq.n	8000f42 <_printf_i+0x162>
 8000fe6:	6823      	ldr	r3, [r4, #0]
 8000fe8:	079b      	lsls	r3, r3, #30
 8000fea:	d413      	bmi.n	8001014 <_printf_i+0x234>
 8000fec:	68e0      	ldr	r0, [r4, #12]
 8000fee:	9b03      	ldr	r3, [sp, #12]
 8000ff0:	4298      	cmp	r0, r3
 8000ff2:	bfb8      	it	lt
 8000ff4:	4618      	movlt	r0, r3
 8000ff6:	e7a6      	b.n	8000f46 <_printf_i+0x166>
 8000ff8:	2301      	movs	r3, #1
 8000ffa:	4632      	mov	r2, r6
 8000ffc:	4649      	mov	r1, r9
 8000ffe:	4640      	mov	r0, r8
 8001000:	47d0      	blx	sl
 8001002:	3001      	adds	r0, #1
 8001004:	d09d      	beq.n	8000f42 <_printf_i+0x162>
 8001006:	3501      	adds	r5, #1
 8001008:	68e3      	ldr	r3, [r4, #12]
 800100a:	9903      	ldr	r1, [sp, #12]
 800100c:	1a5b      	subs	r3, r3, r1
 800100e:	42ab      	cmp	r3, r5
 8001010:	dcf2      	bgt.n	8000ff8 <_printf_i+0x218>
 8001012:	e7eb      	b.n	8000fec <_printf_i+0x20c>
 8001014:	2500      	movs	r5, #0
 8001016:	f104 0619 	add.w	r6, r4, #25
 800101a:	e7f5      	b.n	8001008 <_printf_i+0x228>
 800101c:	08001421 	.word	0x08001421
 8001020:	08001432 	.word	0x08001432

08001024 <__sflush_r>:
 8001024:	898a      	ldrh	r2, [r1, #12]
 8001026:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001028:	4605      	mov	r5, r0
 800102a:	0710      	lsls	r0, r2, #28
 800102c:	460c      	mov	r4, r1
 800102e:	d457      	bmi.n	80010e0 <__sflush_r+0xbc>
 8001030:	684b      	ldr	r3, [r1, #4]
 8001032:	2b00      	cmp	r3, #0
 8001034:	dc04      	bgt.n	8001040 <__sflush_r+0x1c>
 8001036:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001038:	2b00      	cmp	r3, #0
 800103a:	dc01      	bgt.n	8001040 <__sflush_r+0x1c>
 800103c:	2000      	movs	r0, #0
 800103e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001040:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001042:	2e00      	cmp	r6, #0
 8001044:	d0fa      	beq.n	800103c <__sflush_r+0x18>
 8001046:	2300      	movs	r3, #0
 8001048:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800104c:	682f      	ldr	r7, [r5, #0]
 800104e:	6a21      	ldr	r1, [r4, #32]
 8001050:	602b      	str	r3, [r5, #0]
 8001052:	d032      	beq.n	80010ba <__sflush_r+0x96>
 8001054:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001056:	89a3      	ldrh	r3, [r4, #12]
 8001058:	075a      	lsls	r2, r3, #29
 800105a:	d505      	bpl.n	8001068 <__sflush_r+0x44>
 800105c:	6863      	ldr	r3, [r4, #4]
 800105e:	1ac0      	subs	r0, r0, r3
 8001060:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001062:	b10b      	cbz	r3, 8001068 <__sflush_r+0x44>
 8001064:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001066:	1ac0      	subs	r0, r0, r3
 8001068:	2300      	movs	r3, #0
 800106a:	4602      	mov	r2, r0
 800106c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800106e:	4628      	mov	r0, r5
 8001070:	6a21      	ldr	r1, [r4, #32]
 8001072:	47b0      	blx	r6
 8001074:	1c43      	adds	r3, r0, #1
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	d106      	bne.n	8001088 <__sflush_r+0x64>
 800107a:	6829      	ldr	r1, [r5, #0]
 800107c:	291d      	cmp	r1, #29
 800107e:	d82b      	bhi.n	80010d8 <__sflush_r+0xb4>
 8001080:	4a28      	ldr	r2, [pc, #160]	; (8001124 <__sflush_r+0x100>)
 8001082:	410a      	asrs	r2, r1
 8001084:	07d6      	lsls	r6, r2, #31
 8001086:	d427      	bmi.n	80010d8 <__sflush_r+0xb4>
 8001088:	2200      	movs	r2, #0
 800108a:	6062      	str	r2, [r4, #4]
 800108c:	6922      	ldr	r2, [r4, #16]
 800108e:	04d9      	lsls	r1, r3, #19
 8001090:	6022      	str	r2, [r4, #0]
 8001092:	d504      	bpl.n	800109e <__sflush_r+0x7a>
 8001094:	1c42      	adds	r2, r0, #1
 8001096:	d101      	bne.n	800109c <__sflush_r+0x78>
 8001098:	682b      	ldr	r3, [r5, #0]
 800109a:	b903      	cbnz	r3, 800109e <__sflush_r+0x7a>
 800109c:	6560      	str	r0, [r4, #84]	; 0x54
 800109e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010a0:	602f      	str	r7, [r5, #0]
 80010a2:	2900      	cmp	r1, #0
 80010a4:	d0ca      	beq.n	800103c <__sflush_r+0x18>
 80010a6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010aa:	4299      	cmp	r1, r3
 80010ac:	d002      	beq.n	80010b4 <__sflush_r+0x90>
 80010ae:	4628      	mov	r0, r5
 80010b0:	f7ff fbee 	bl	8000890 <_free_r>
 80010b4:	2000      	movs	r0, #0
 80010b6:	6360      	str	r0, [r4, #52]	; 0x34
 80010b8:	e7c1      	b.n	800103e <__sflush_r+0x1a>
 80010ba:	2301      	movs	r3, #1
 80010bc:	4628      	mov	r0, r5
 80010be:	47b0      	blx	r6
 80010c0:	1c41      	adds	r1, r0, #1
 80010c2:	d1c8      	bne.n	8001056 <__sflush_r+0x32>
 80010c4:	682b      	ldr	r3, [r5, #0]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d0c5      	beq.n	8001056 <__sflush_r+0x32>
 80010ca:	2b1d      	cmp	r3, #29
 80010cc:	d001      	beq.n	80010d2 <__sflush_r+0xae>
 80010ce:	2b16      	cmp	r3, #22
 80010d0:	d101      	bne.n	80010d6 <__sflush_r+0xb2>
 80010d2:	602f      	str	r7, [r5, #0]
 80010d4:	e7b2      	b.n	800103c <__sflush_r+0x18>
 80010d6:	89a3      	ldrh	r3, [r4, #12]
 80010d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010dc:	81a3      	strh	r3, [r4, #12]
 80010de:	e7ae      	b.n	800103e <__sflush_r+0x1a>
 80010e0:	690f      	ldr	r7, [r1, #16]
 80010e2:	2f00      	cmp	r7, #0
 80010e4:	d0aa      	beq.n	800103c <__sflush_r+0x18>
 80010e6:	0793      	lsls	r3, r2, #30
 80010e8:	bf18      	it	ne
 80010ea:	2300      	movne	r3, #0
 80010ec:	680e      	ldr	r6, [r1, #0]
 80010ee:	bf08      	it	eq
 80010f0:	694b      	ldreq	r3, [r1, #20]
 80010f2:	1bf6      	subs	r6, r6, r7
 80010f4:	600f      	str	r7, [r1, #0]
 80010f6:	608b      	str	r3, [r1, #8]
 80010f8:	2e00      	cmp	r6, #0
 80010fa:	dd9f      	ble.n	800103c <__sflush_r+0x18>
 80010fc:	4633      	mov	r3, r6
 80010fe:	463a      	mov	r2, r7
 8001100:	4628      	mov	r0, r5
 8001102:	6a21      	ldr	r1, [r4, #32]
 8001104:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001108:	47e0      	blx	ip
 800110a:	2800      	cmp	r0, #0
 800110c:	dc06      	bgt.n	800111c <__sflush_r+0xf8>
 800110e:	89a3      	ldrh	r3, [r4, #12]
 8001110:	f04f 30ff 	mov.w	r0, #4294967295
 8001114:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001118:	81a3      	strh	r3, [r4, #12]
 800111a:	e790      	b.n	800103e <__sflush_r+0x1a>
 800111c:	4407      	add	r7, r0
 800111e:	1a36      	subs	r6, r6, r0
 8001120:	e7ea      	b.n	80010f8 <__sflush_r+0xd4>
 8001122:	bf00      	nop
 8001124:	dfbffffe 	.word	0xdfbffffe

08001128 <_fflush_r>:
 8001128:	b538      	push	{r3, r4, r5, lr}
 800112a:	690b      	ldr	r3, [r1, #16]
 800112c:	4605      	mov	r5, r0
 800112e:	460c      	mov	r4, r1
 8001130:	b913      	cbnz	r3, 8001138 <_fflush_r+0x10>
 8001132:	2500      	movs	r5, #0
 8001134:	4628      	mov	r0, r5
 8001136:	bd38      	pop	{r3, r4, r5, pc}
 8001138:	b118      	cbz	r0, 8001142 <_fflush_r+0x1a>
 800113a:	6a03      	ldr	r3, [r0, #32]
 800113c:	b90b      	cbnz	r3, 8001142 <_fflush_r+0x1a>
 800113e:	f7ff fa9f 	bl	8000680 <__sinit>
 8001142:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001146:	2b00      	cmp	r3, #0
 8001148:	d0f3      	beq.n	8001132 <_fflush_r+0xa>
 800114a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800114c:	07d0      	lsls	r0, r2, #31
 800114e:	d404      	bmi.n	800115a <_fflush_r+0x32>
 8001150:	0599      	lsls	r1, r3, #22
 8001152:	d402      	bmi.n	800115a <_fflush_r+0x32>
 8001154:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001156:	f7ff fb98 	bl	800088a <__retarget_lock_acquire_recursive>
 800115a:	4628      	mov	r0, r5
 800115c:	4621      	mov	r1, r4
 800115e:	f7ff ff61 	bl	8001024 <__sflush_r>
 8001162:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001164:	4605      	mov	r5, r0
 8001166:	07da      	lsls	r2, r3, #31
 8001168:	d4e4      	bmi.n	8001134 <_fflush_r+0xc>
 800116a:	89a3      	ldrh	r3, [r4, #12]
 800116c:	059b      	lsls	r3, r3, #22
 800116e:	d4e1      	bmi.n	8001134 <_fflush_r+0xc>
 8001170:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001172:	f7ff fb8b 	bl	800088c <__retarget_lock_release_recursive>
 8001176:	e7dd      	b.n	8001134 <_fflush_r+0xc>

08001178 <__swbuf_r>:
 8001178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800117a:	460e      	mov	r6, r1
 800117c:	4614      	mov	r4, r2
 800117e:	4605      	mov	r5, r0
 8001180:	b118      	cbz	r0, 800118a <__swbuf_r+0x12>
 8001182:	6a03      	ldr	r3, [r0, #32]
 8001184:	b90b      	cbnz	r3, 800118a <__swbuf_r+0x12>
 8001186:	f7ff fa7b 	bl	8000680 <__sinit>
 800118a:	69a3      	ldr	r3, [r4, #24]
 800118c:	60a3      	str	r3, [r4, #8]
 800118e:	89a3      	ldrh	r3, [r4, #12]
 8001190:	071a      	lsls	r2, r3, #28
 8001192:	d525      	bpl.n	80011e0 <__swbuf_r+0x68>
 8001194:	6923      	ldr	r3, [r4, #16]
 8001196:	b31b      	cbz	r3, 80011e0 <__swbuf_r+0x68>
 8001198:	6823      	ldr	r3, [r4, #0]
 800119a:	6922      	ldr	r2, [r4, #16]
 800119c:	b2f6      	uxtb	r6, r6
 800119e:	1a98      	subs	r0, r3, r2
 80011a0:	6963      	ldr	r3, [r4, #20]
 80011a2:	4637      	mov	r7, r6
 80011a4:	4283      	cmp	r3, r0
 80011a6:	dc04      	bgt.n	80011b2 <__swbuf_r+0x3a>
 80011a8:	4621      	mov	r1, r4
 80011aa:	4628      	mov	r0, r5
 80011ac:	f7ff ffbc 	bl	8001128 <_fflush_r>
 80011b0:	b9e0      	cbnz	r0, 80011ec <__swbuf_r+0x74>
 80011b2:	68a3      	ldr	r3, [r4, #8]
 80011b4:	3b01      	subs	r3, #1
 80011b6:	60a3      	str	r3, [r4, #8]
 80011b8:	6823      	ldr	r3, [r4, #0]
 80011ba:	1c5a      	adds	r2, r3, #1
 80011bc:	6022      	str	r2, [r4, #0]
 80011be:	701e      	strb	r6, [r3, #0]
 80011c0:	6962      	ldr	r2, [r4, #20]
 80011c2:	1c43      	adds	r3, r0, #1
 80011c4:	429a      	cmp	r2, r3
 80011c6:	d004      	beq.n	80011d2 <__swbuf_r+0x5a>
 80011c8:	89a3      	ldrh	r3, [r4, #12]
 80011ca:	07db      	lsls	r3, r3, #31
 80011cc:	d506      	bpl.n	80011dc <__swbuf_r+0x64>
 80011ce:	2e0a      	cmp	r6, #10
 80011d0:	d104      	bne.n	80011dc <__swbuf_r+0x64>
 80011d2:	4621      	mov	r1, r4
 80011d4:	4628      	mov	r0, r5
 80011d6:	f7ff ffa7 	bl	8001128 <_fflush_r>
 80011da:	b938      	cbnz	r0, 80011ec <__swbuf_r+0x74>
 80011dc:	4638      	mov	r0, r7
 80011de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011e0:	4621      	mov	r1, r4
 80011e2:	4628      	mov	r0, r5
 80011e4:	f000 f806 	bl	80011f4 <__swsetup_r>
 80011e8:	2800      	cmp	r0, #0
 80011ea:	d0d5      	beq.n	8001198 <__swbuf_r+0x20>
 80011ec:	f04f 37ff 	mov.w	r7, #4294967295
 80011f0:	e7f4      	b.n	80011dc <__swbuf_r+0x64>
	...

080011f4 <__swsetup_r>:
 80011f4:	b538      	push	{r3, r4, r5, lr}
 80011f6:	4b2a      	ldr	r3, [pc, #168]	; (80012a0 <__swsetup_r+0xac>)
 80011f8:	4605      	mov	r5, r0
 80011fa:	6818      	ldr	r0, [r3, #0]
 80011fc:	460c      	mov	r4, r1
 80011fe:	b118      	cbz	r0, 8001208 <__swsetup_r+0x14>
 8001200:	6a03      	ldr	r3, [r0, #32]
 8001202:	b90b      	cbnz	r3, 8001208 <__swsetup_r+0x14>
 8001204:	f7ff fa3c 	bl	8000680 <__sinit>
 8001208:	89a3      	ldrh	r3, [r4, #12]
 800120a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800120e:	0718      	lsls	r0, r3, #28
 8001210:	d422      	bmi.n	8001258 <__swsetup_r+0x64>
 8001212:	06d9      	lsls	r1, r3, #27
 8001214:	d407      	bmi.n	8001226 <__swsetup_r+0x32>
 8001216:	2309      	movs	r3, #9
 8001218:	602b      	str	r3, [r5, #0]
 800121a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800121e:	f04f 30ff 	mov.w	r0, #4294967295
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	e034      	b.n	8001290 <__swsetup_r+0x9c>
 8001226:	0758      	lsls	r0, r3, #29
 8001228:	d512      	bpl.n	8001250 <__swsetup_r+0x5c>
 800122a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800122c:	b141      	cbz	r1, 8001240 <__swsetup_r+0x4c>
 800122e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001232:	4299      	cmp	r1, r3
 8001234:	d002      	beq.n	800123c <__swsetup_r+0x48>
 8001236:	4628      	mov	r0, r5
 8001238:	f7ff fb2a 	bl	8000890 <_free_r>
 800123c:	2300      	movs	r3, #0
 800123e:	6363      	str	r3, [r4, #52]	; 0x34
 8001240:	89a3      	ldrh	r3, [r4, #12]
 8001242:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001246:	81a3      	strh	r3, [r4, #12]
 8001248:	2300      	movs	r3, #0
 800124a:	6063      	str	r3, [r4, #4]
 800124c:	6923      	ldr	r3, [r4, #16]
 800124e:	6023      	str	r3, [r4, #0]
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	f043 0308 	orr.w	r3, r3, #8
 8001256:	81a3      	strh	r3, [r4, #12]
 8001258:	6923      	ldr	r3, [r4, #16]
 800125a:	b94b      	cbnz	r3, 8001270 <__swsetup_r+0x7c>
 800125c:	89a3      	ldrh	r3, [r4, #12]
 800125e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001262:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001266:	d003      	beq.n	8001270 <__swsetup_r+0x7c>
 8001268:	4621      	mov	r1, r4
 800126a:	4628      	mov	r0, r5
 800126c:	f000 f85d 	bl	800132a <__smakebuf_r>
 8001270:	89a0      	ldrh	r0, [r4, #12]
 8001272:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001276:	f010 0301 	ands.w	r3, r0, #1
 800127a:	d00a      	beq.n	8001292 <__swsetup_r+0x9e>
 800127c:	2300      	movs	r3, #0
 800127e:	60a3      	str	r3, [r4, #8]
 8001280:	6963      	ldr	r3, [r4, #20]
 8001282:	425b      	negs	r3, r3
 8001284:	61a3      	str	r3, [r4, #24]
 8001286:	6923      	ldr	r3, [r4, #16]
 8001288:	b943      	cbnz	r3, 800129c <__swsetup_r+0xa8>
 800128a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800128e:	d1c4      	bne.n	800121a <__swsetup_r+0x26>
 8001290:	bd38      	pop	{r3, r4, r5, pc}
 8001292:	0781      	lsls	r1, r0, #30
 8001294:	bf58      	it	pl
 8001296:	6963      	ldrpl	r3, [r4, #20]
 8001298:	60a3      	str	r3, [r4, #8]
 800129a:	e7f4      	b.n	8001286 <__swsetup_r+0x92>
 800129c:	2000      	movs	r0, #0
 800129e:	e7f7      	b.n	8001290 <__swsetup_r+0x9c>
 80012a0:	20000058 	.word	0x20000058

080012a4 <_sbrk_r>:
 80012a4:	b538      	push	{r3, r4, r5, lr}
 80012a6:	2300      	movs	r3, #0
 80012a8:	4d05      	ldr	r5, [pc, #20]	; (80012c0 <_sbrk_r+0x1c>)
 80012aa:	4604      	mov	r4, r0
 80012ac:	4608      	mov	r0, r1
 80012ae:	602b      	str	r3, [r5, #0]
 80012b0:	f7ff f85c 	bl	800036c <_sbrk>
 80012b4:	1c43      	adds	r3, r0, #1
 80012b6:	d102      	bne.n	80012be <_sbrk_r+0x1a>
 80012b8:	682b      	ldr	r3, [r5, #0]
 80012ba:	b103      	cbz	r3, 80012be <_sbrk_r+0x1a>
 80012bc:	6023      	str	r3, [r4, #0]
 80012be:	bd38      	pop	{r3, r4, r5, pc}
 80012c0:	200001bc 	.word	0x200001bc

080012c4 <memchr>:
 80012c4:	4603      	mov	r3, r0
 80012c6:	b510      	push	{r4, lr}
 80012c8:	b2c9      	uxtb	r1, r1
 80012ca:	4402      	add	r2, r0
 80012cc:	4293      	cmp	r3, r2
 80012ce:	4618      	mov	r0, r3
 80012d0:	d101      	bne.n	80012d6 <memchr+0x12>
 80012d2:	2000      	movs	r0, #0
 80012d4:	e003      	b.n	80012de <memchr+0x1a>
 80012d6:	7804      	ldrb	r4, [r0, #0]
 80012d8:	3301      	adds	r3, #1
 80012da:	428c      	cmp	r4, r1
 80012dc:	d1f6      	bne.n	80012cc <memchr+0x8>
 80012de:	bd10      	pop	{r4, pc}

080012e0 <__swhatbuf_r>:
 80012e0:	b570      	push	{r4, r5, r6, lr}
 80012e2:	460c      	mov	r4, r1
 80012e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e8:	4615      	mov	r5, r2
 80012ea:	2900      	cmp	r1, #0
 80012ec:	461e      	mov	r6, r3
 80012ee:	b096      	sub	sp, #88	; 0x58
 80012f0:	da0c      	bge.n	800130c <__swhatbuf_r+0x2c>
 80012f2:	89a3      	ldrh	r3, [r4, #12]
 80012f4:	2100      	movs	r1, #0
 80012f6:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012fa:	bf0c      	ite	eq
 80012fc:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001300:	2340      	movne	r3, #64	; 0x40
 8001302:	2000      	movs	r0, #0
 8001304:	6031      	str	r1, [r6, #0]
 8001306:	602b      	str	r3, [r5, #0]
 8001308:	b016      	add	sp, #88	; 0x58
 800130a:	bd70      	pop	{r4, r5, r6, pc}
 800130c:	466a      	mov	r2, sp
 800130e:	f000 f849 	bl	80013a4 <_fstat_r>
 8001312:	2800      	cmp	r0, #0
 8001314:	dbed      	blt.n	80012f2 <__swhatbuf_r+0x12>
 8001316:	9901      	ldr	r1, [sp, #4]
 8001318:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800131c:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001320:	4259      	negs	r1, r3
 8001322:	4159      	adcs	r1, r3
 8001324:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001328:	e7eb      	b.n	8001302 <__swhatbuf_r+0x22>

0800132a <__smakebuf_r>:
 800132a:	898b      	ldrh	r3, [r1, #12]
 800132c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800132e:	079d      	lsls	r5, r3, #30
 8001330:	4606      	mov	r6, r0
 8001332:	460c      	mov	r4, r1
 8001334:	d507      	bpl.n	8001346 <__smakebuf_r+0x1c>
 8001336:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800133a:	6023      	str	r3, [r4, #0]
 800133c:	6123      	str	r3, [r4, #16]
 800133e:	2301      	movs	r3, #1
 8001340:	6163      	str	r3, [r4, #20]
 8001342:	b002      	add	sp, #8
 8001344:	bd70      	pop	{r4, r5, r6, pc}
 8001346:	466a      	mov	r2, sp
 8001348:	ab01      	add	r3, sp, #4
 800134a:	f7ff ffc9 	bl	80012e0 <__swhatbuf_r>
 800134e:	9900      	ldr	r1, [sp, #0]
 8001350:	4605      	mov	r5, r0
 8001352:	4630      	mov	r0, r6
 8001354:	f7ff fb04 	bl	8000960 <_malloc_r>
 8001358:	b948      	cbnz	r0, 800136e <__smakebuf_r+0x44>
 800135a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135e:	059a      	lsls	r2, r3, #22
 8001360:	d4ef      	bmi.n	8001342 <__smakebuf_r+0x18>
 8001362:	f023 0303 	bic.w	r3, r3, #3
 8001366:	f043 0302 	orr.w	r3, r3, #2
 800136a:	81a3      	strh	r3, [r4, #12]
 800136c:	e7e3      	b.n	8001336 <__smakebuf_r+0xc>
 800136e:	89a3      	ldrh	r3, [r4, #12]
 8001370:	6020      	str	r0, [r4, #0]
 8001372:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001376:	81a3      	strh	r3, [r4, #12]
 8001378:	9b00      	ldr	r3, [sp, #0]
 800137a:	6120      	str	r0, [r4, #16]
 800137c:	6163      	str	r3, [r4, #20]
 800137e:	9b01      	ldr	r3, [sp, #4]
 8001380:	b15b      	cbz	r3, 800139a <__smakebuf_r+0x70>
 8001382:	4630      	mov	r0, r6
 8001384:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001388:	f000 f81e 	bl	80013c8 <_isatty_r>
 800138c:	b128      	cbz	r0, 800139a <__smakebuf_r+0x70>
 800138e:	89a3      	ldrh	r3, [r4, #12]
 8001390:	f023 0303 	bic.w	r3, r3, #3
 8001394:	f043 0301 	orr.w	r3, r3, #1
 8001398:	81a3      	strh	r3, [r4, #12]
 800139a:	89a3      	ldrh	r3, [r4, #12]
 800139c:	431d      	orrs	r5, r3
 800139e:	81a5      	strh	r5, [r4, #12]
 80013a0:	e7cf      	b.n	8001342 <__smakebuf_r+0x18>
	...

080013a4 <_fstat_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	2300      	movs	r3, #0
 80013a8:	4d06      	ldr	r5, [pc, #24]	; (80013c4 <_fstat_r+0x20>)
 80013aa:	4604      	mov	r4, r0
 80013ac:	4608      	mov	r0, r1
 80013ae:	4611      	mov	r1, r2
 80013b0:	602b      	str	r3, [r5, #0]
 80013b2:	f7fe ffb5 	bl	8000320 <_fstat>
 80013b6:	1c43      	adds	r3, r0, #1
 80013b8:	d102      	bne.n	80013c0 <_fstat_r+0x1c>
 80013ba:	682b      	ldr	r3, [r5, #0]
 80013bc:	b103      	cbz	r3, 80013c0 <_fstat_r+0x1c>
 80013be:	6023      	str	r3, [r4, #0]
 80013c0:	bd38      	pop	{r3, r4, r5, pc}
 80013c2:	bf00      	nop
 80013c4:	200001bc 	.word	0x200001bc

080013c8 <_isatty_r>:
 80013c8:	b538      	push	{r3, r4, r5, lr}
 80013ca:	2300      	movs	r3, #0
 80013cc:	4d05      	ldr	r5, [pc, #20]	; (80013e4 <_isatty_r+0x1c>)
 80013ce:	4604      	mov	r4, r0
 80013d0:	4608      	mov	r0, r1
 80013d2:	602b      	str	r3, [r5, #0]
 80013d4:	f7fe ffb3 	bl	800033e <_isatty>
 80013d8:	1c43      	adds	r3, r0, #1
 80013da:	d102      	bne.n	80013e2 <_isatty_r+0x1a>
 80013dc:	682b      	ldr	r3, [r5, #0]
 80013de:	b103      	cbz	r3, 80013e2 <_isatty_r+0x1a>
 80013e0:	6023      	str	r3, [r4, #0]
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	200001bc 	.word	0x200001bc

080013e8 <_init>:
 80013e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ea:	bf00      	nop
 80013ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ee:	bc08      	pop	{r3}
 80013f0:	469e      	mov	lr, r3
 80013f2:	4770      	bx	lr

080013f4 <_fini>:
 80013f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013f6:	bf00      	nop
 80013f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013fa:	bc08      	pop	{r3}
 80013fc:	469e      	mov	lr, r3
 80013fe:	4770      	bx	lr
